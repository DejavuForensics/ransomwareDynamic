{
    "info": {
        "added": 1644769716.321313, 
        "started": 1644776867.883373, 
        "duration": 644, 
        "ended": 1644777512.867224, 
        "owner": null, 
        "score": 0.1, 
        "id": 2748542, 
        "category": "file", 
        "git": {
            "head": "e8f6317b4b3ef806085a1e99e64c6ff01f26948f", 
            "fetch_head": "e8f6317b4b3ef806085a1e99e64c6ff01f26948f"
        }, 
        "monitor": "2deb9ccd75d5a7a3fe05b2625b03a8639d6ee36b", 
        "package": "exe", 
        "route": "internet", 
        "custom": null, 
        "machine": {
            "status": "stopped", 
            "name": "win7x644", 
            "label": "win7x644", 
            "platform": "windows", 
            "manager": "VirtualBox", 
            "started_on": "2022-02-13 18:28:23", 
            "shutdown_on": "2022-02-13 18:38:32"
        }, 
        "platform": "windows", 
        "version": "2.0.7", 
        "options": "procmemdump=yes,route=internet"
    }, 
    "signatures": [
        {
            "families": [], 
            "description": "Yara rules detected for file", 
            "severity": 1, 
            "ttp": {}, 
            "markcount": 5, 
            "references": [], 
            "marks": [
                {
                    "type": "generic", 
                    "description": "(no description)", 
                    "rule": "DebuggerException__SetConsoleCtrl"
                }, 
                {
                    "type": "generic", 
                    "description": "Checks if being debugged", 
                    "rule": "anti_dbg"
                }, 
                {
                    "type": "generic", 
                    "description": "Listen for incoming communication", 
                    "rule": "network_tcp_listen"
                }, 
                {
                    "type": "generic", 
                    "description": "Communications over RAW socket", 
                    "rule": "network_tcp_socket"
                }, 
                {
                    "type": "generic", 
                    "description": "Affect private profile", 
                    "rule": "win_files_operation"
                }
            ], 
            "name": "file_yara"
        }
    ], 
    "target": {
        "category": "file", 
        "file": {
            "mimetype": "application/x-dosexec", 
            "yara": [
                {
                    "meta": {
                        "weight": 1, 
                        "description": "(no description)", 
                        "reference": "https://github.com/naxonez/yaraRules/blob/master/AntiDebugging.yara", 
                        "Author": "naxonez"
                    }, 
                    "name": "DebuggerException__SetConsoleCtrl", 
                    "offsets": {
                        "": [
                            [
                                360796, 
                                0
                            ]
                        ]
                    }, 
                    "strings": [
                        "U2V0Q29uc29sZUN0cmxIYW5kbGVy"
                    ]
                }, 
                {
                    "meta": {
                        "version": "0.2", 
                        "description": "Checks if being debugged", 
                        "author": "x0r"
                    }, 
                    "name": "anti_dbg", 
                    "offsets": {
                        "c2": [
                            [
                                362666, 
                                1
                            ]
                        ], 
                        "d1": [
                            [
                                361354, 
                                0
                            ]
                        ]
                    }, 
                    "strings": [
                        "S0VSTkVMMzIuZGxs", 
                        "SXNEZWJ1Z2dlclByZXNlbnQ="
                    ]
                }, 
                {
                    "meta": {
                        "version": "0.1", 
                        "description": "Listen for incoming communication", 
                        "author": "x0r"
                    }, 
                    "name": "network_tcp_listen", 
                    "offsets": {
                        "f1": [
                            [
                                360586, 
                                0
                            ]
                        ], 
                        "c1": [
                            [
                                239965, 
                                3
                            ], 
                            [
                                362648, 
                                3
                            ]
                        ], 
                        "c10": [
                            [
                                237039, 
                                4
                            ], 
                            [
                                238717, 
                                4
                            ], 
                            [
                                240005, 
                                4
                            ]
                        ], 
                        "c5": [
                            [
                                239199, 
                                1
                            ]
                        ], 
                        "c2": [
                            [
                                240213, 
                                2
                            ]
                        ]
                    }, 
                    "strings": [
                        "V1MyXzMyLmRsbA==", 
                        "V1NBU3RhcnR1cA==", 
                        "YWNjZXB0", 
                        "YmluZA==", 
                        "bGlzdGVu"
                    ]
                }, 
                {
                    "meta": {
                        "version": "0.1", 
                        "description": "Communications over RAW socket", 
                        "author": "x0r"
                    }, 
                    "name": "network_tcp_socket", 
                    "offsets": {
                        "c3": [
                            [
                                298207, 
                                4
                            ], 
                            [
                                298328, 
                                4
                            ], 
                            [
                                302293, 
                                4
                            ], 
                            [
                                302380, 
                                4
                            ], 
                            [
                                302407, 
                                4
                            ], 
                            [
                                302837, 
                                4
                            ], 
                            [
                                302924, 
                                4
                            ], 
                            [
                                302951, 
                                4
                            ], 
                            [
                                303365, 
                                4
                            ], 
                            [
                                303452, 
                                4
                            ], 
                            [
                                303479, 
                                4
                            ], 
                            [
                                303957, 
                                4
                            ], 
                            [
                                304058, 
                                4
                            ], 
                            [
                                304085, 
                                4
                            ], 
                            [
                                304517, 
                                4
                            ], 
                            [
                                304625, 
                                4
                            ], 
                            [
                                304652, 
                                4
                            ], 
                            [
                                305075, 
                                4
                            ], 
                            [
                                305163, 
                                4
                            ], 
                            [
                                305587, 
                                4
                            ], 
                            [
                                305675, 
                                4
                            ], 
                            [
                                305987, 
                                4
                            ], 
                            [
                                306075, 
                                4
                            ], 
                            [
                                306403, 
                                4
                            ], 
                            [
                                306491, 
                                4
                            ], 
                            [
                                306789, 
                                4
                            ], 
                            [
                                306861, 
                                4
                            ]
                        ], 
                        "f1": [
                            [
                                360586, 
                                0
                            ]
                        ], 
                        "c7": [
                            [
                                239199, 
                                1
                            ]
                        ], 
                        "c6": [
                            [
                                227420, 
                                2
                            ], 
                            [
                                235627, 
                                2
                            ], 
                            [
                                240157, 
                                2
                            ], 
                            [
                                240220, 
                                2
                            ], 
                            [
                                240595, 
                                2
                            ], 
                            [
                                240659, 
                                2
                            ], 
                            [
                                241323, 
                                2
                            ], 
                            [
                                244747, 
                                2
                            ], 
                            [
                                247826, 
                                2
                            ], 
                            [
                                247974, 
                                2
                            ], 
                            [
                                248014, 
                                2
                            ], 
                            [
                                248090, 
                                2
                            ], 
                            [
                                248130, 
                                2
                            ], 
                            [
                                248172, 
                                2
                            ], 
                            [
                                248194, 
                                2
                            ], 
                            [
                                251335, 
                                2
                            ], 
                            [
                                256525, 
                                2
                            ]
                        ], 
                        "c2": [
                            [
                                239924, 
                                3
                            ], 
                            [
                                240115, 
                                3
                            ], 
                            [
                                240165, 
                                3
                            ], 
                            [
                                256421, 
                                3
                            ]
                        ]
                    }, 
                    "strings": [
                        "V1MyXzMyLmRsbA==", 
                        "V1NBU3RhcnR1cA==", 
                        "Y29ubmVjdA==", 
                        "c29ja2V0", 
                        "c2VuZA=="
                    ]
                }, 
                {
                    "meta": {
                        "version": "0.1", 
                        "description": "Affect private profile", 
                        "author": "x0r"
                    }, 
                    "name": "win_files_operation", 
                    "offsets": {
                        "f1": [
                            [
                                361354, 
                                3
                            ]
                        ], 
                        "c9": [
                            [
                                361236, 
                                1
                            ]
                        ], 
                        "c8": [
                            [
                                361126, 
                                4
                            ]
                        ], 
                        "c7": [
                            [
                                361248, 
                                2
                            ]
                        ], 
                        "c6": [
                            [
                                361066, 
                                0
                            ]
                        ], 
                        "c4": [
                            [
                                360904, 
                                5
                            ]
                        ]
                    }, 
                    "strings": [
                        "Q3JlYXRlRmlsZUE=", 
                        "RmluZENsb3Nl", 
                        "RmluZEZpcnN0RmlsZUE=", 
                        "S0VSTkVMMzIuZGxs", 
                        "TW92ZUZpbGVFeEE=", 
                        "UmVhZEZpbGU="
                    ]
                }
            ], 
            "sha1": "e81276a079739d13687c3b90d7c76f72048eb884", 
            "name": "pg_dump.exe", 
            "type": "MS-DOS executable", 
            "sha256": "1ea1998b5bd0756e744384caa15c4fda905970f830649bf15f5c057d9dac248f", 
            "urls": [], 
            "crc32": "B0EDF7FB", 
            "path": "/srv/cuckoo/cwd/storage/binaries/1ea1998b5bd0756e744384caa15c4fda905970f830649bf15f5c057d9dac248f", 
            "ssdeep": "6144:SEuiUsY71X0pIr3hVWsbktH1gl80YKfK9YrovO/q/IwKZC1WoeiNI/vAJppqGZ:puiXYZXtnWsMIwKZuNIX47", 
            "size": 402399, 
            "sha512": "94580775603b0c832b989c71cb43564eb7b2d6c0f455646e953239359e9b802a7990158fa2a440a9d39c47cf42d796be001774e679fe437982b5f7f92b11758f", 
            "md5": "02f6ab23f1fd81b9e71aac8f32618d35"
        }, 
        "custom": null
    }, 
    "irma": {
        "status": 0, 
        "probes_finished": 16, 
        "scan_id": "bde32102-4a76-4f43-a06e-928adf6a2fb1", 
        "parent_file_sha256": null, 
        "file_infos": {
            "mimetype": "MS-DOS executable", 
            "sha1": "e81276a079739d13687c3b90d7c76f72048eb884", 
            "tags": [], 
            "timestamp_first_scan": 1643996927.41, 
            "size": 402399, 
            "timestamp_last_scan": 1644770322.64, 
            "sha256": "1ea1998b5bd0756e744384caa15c4fda905970f830649bf15f5c057d9dac248f", 
            "md5": "02f6ab23f1fd81b9e71aac8f32618d35"
        }, 
        "scan_date": 1644770314, 
        "name": "1ea1998b5bd0756e744384caa15c4fda905970f830649bf15f5c057d9dac248f", 
        "other_results": [], 
        "submitter": "cli", 
        "probes_total": 16, 
        "probe_results": {
            "antivirus": {
                "Avast Core Security (Linux)": {
                    "status": 0, 
                    "duration": 0.01, 
                    "version": "3.0.3", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "F-Secure Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 0.03, 
                    "version": "11.10", 
                    "results": null, 
                    "virus_database_version": "2022-02-04_03"
                }, 
                "Windows Defender (Windows)": {
                    "status": 0, 
                    "duration": 0.05, 
                    "version": "1.1.18800.4", 
                    "results": null, 
                    "virus_database_version": "1.355.1049.0"
                }, 
                "Comodo Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 2.07, 
                    "version": "1.1.268025.1", 
                    "results": null, 
                    "virus_database_version": "2021-12-31"
                }, 
                "Kaspersky Antivirus (Win)": {
                    "status": 0, 
                    "duration": 2.72, 
                    "version": "21.3", 
                    "results": null, 
                    "virus_database_version": "2022-01-16 02:22:00 (full)"
                }, 
                "ESET NOD32 Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 4.86, 
                    "version": "4.0.96", 
                    "results": null, 
                    "virus_database_version": "61ad92b8-1e6f6 (2022-02-04)"
                }, 
                "GData (Windows)": {
                    "status": 0, 
                    "duration": 0.22, 
                    "version": "5.5.20197.1358", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "Forticlient (Linux)": {
                    "status": 0, 
                    "duration": 3.04, 
                    "version": "unavailable", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "Avira (Windows)": {
                    "status": 0, 
                    "duration": 3.91, 
                    "version": "8.3.64.66", 
                    "results": null, 
                    "virus_database_version": "8.19.1.122"
                }, 
                "eScan Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 4.41, 
                    "version": "7.0.21", 
                    "results": null, 
                    "virus_database_version": "7.91093 (04/02/2022)"
                }, 
                "McAfee CLI scanner (Linux)": {
                    "status": 0, 
                    "duration": 6.0, 
                    "version": "6.0.6.653", 
                    "results": null, 
                    "virus_database_version": "10247"
                }, 
                "Sophos Anti-Virus (Linux)": {
                    "status": 0, 
                    "duration": 6.68, 
                    "version": "5.85.0", 
                    "results": null, 
                    "virus_database_version": "5.90 (01 February 2022)"
                }, 
                "DrWeb Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 0.09, 
                    "version": "11.1.11.2110182032", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "ClamAV (Linux)": {
                    "status": 0, 
                    "duration": 0.43, 
                    "version": "0.103.5", 
                    "results": null, 
                    "virus_database_version": "26442"
                }, 
                "Bitdefender Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 6.18, 
                    "version": "7.90123", 
                    "results": null, 
                    "virus_database_version": null
                }, 
                "Emsisoft Commandline Scanner (Windows)": {
                    "status": 0, 
                    "duration": 0.23, 
                    "version": "2021.10.0.11201", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }
            }
        }, 
        "path": "", 
        "result_id": "1a47d6a7-239d-4f76-91df-95267ed660b5", 
        "file_sha256": "1ea1998b5bd0756e744384caa15c4fda905970f830649bf15f5c057d9dac248f"
    }, 
    "suricata": {
        "tls": [], 
        "files": [], 
        "alerts": [], 
        "http": []
    }, 
    "virustotal": {
        "summary": {
            "error": "resource has not been scanned yet"
        }
    }, 
    "network": {
        "udp": [], 
        "dns_servers": [], 
        "http": [], 
        "smtp": [], 
        "tcp": [], 
        "geoinfo": {}, 
        "mitm": [], 
        "https_ex": [], 
        "http_ex": [], 
        "sorted_pcap_sha256": "deb53125734c2c71779f715831dbfe33af3956885138a14fa733617a2266ad18", 
        "icmp": [], 
        "tls": [], 
        "dead_hosts": [], 
        "smtp_ex": [], 
        "hosts": [], 
        "pcap_sha256": "653f01c67670d1a32fe24728a0dac7572f74dcd148abf44ed8650f968a464f7d", 
        "dns": [], 
        "domains": [], 
        "irc": []
    }, 
    "resubmit": {
        "resubmit_ids": []
    }, 
    "static": {
        "keys": []
    }, 
    "snort": {
        "alerts": []
    }, 
    "behavior": {
        "generic": [
            {
                "process_path": "C:\\Windows\\System32\\lsass.exe", 
                "process_name": "lsass.exe", 
                "pid": 504, 
                "summary": {}, 
                "first_seen": 1644769718.109375, 
                "ppid": 388
            }
        ], 
        "processes": [
            {
                "process_path": "C:\\Windows\\System32\\lsass.exe", 
                "calls": [], 
                "track": false, 
                "pid": 504, 
                "process_name": "lsass.exe", 
                "command_line": "C:\\Windows\\system32\\lsass.exe", 
                "modules": [
                    {
                        "basename": "lsass.exe", 
                        "imgsize": 49152, 
                        "baseaddr": "0xffaf0000", 
                        "filepath": "C:\\Windows\\system32\\lsass.exe"
                    }, 
                    {
                        "basename": "ntdll.dll", 
                        "imgsize": 1740800, 
                        "baseaddr": "0x77ac0000", 
                        "filepath": "C:\\Windows\\SYSTEM32\\ntdll.dll"
                    }, 
                    {
                        "basename": "kernel32.dll", 
                        "imgsize": 1175552, 
                        "baseaddr": "0x778a0000", 
                        "filepath": "C:\\Windows\\system32\\kernel32.dll"
                    }, 
                    {
                        "basename": "KERNELBASE.dll", 
                        "imgsize": 438272, 
                        "baseaddr": "0x7fefda70000", 
                        "filepath": "C:\\Windows\\system32\\KERNELBASE.dll"
                    }, 
                    {
                        "basename": "msvcrt.dll", 
                        "imgsize": 651264, 
                        "baseaddr": "0x7feff3c0000", 
                        "filepath": "C:\\Windows\\system32\\msvcrt.dll"
                    }, 
                    {
                        "basename": "RPCRT4.dll", 
                        "imgsize": 1232896, 
                        "baseaddr": "0x7fefdca0000", 
                        "filepath": "C:\\Windows\\system32\\RPCRT4.dll"
                    }, 
                    {
                        "basename": "SspiSrv.dll", 
                        "imgsize": 45056, 
                        "baseaddr": "0x7fefd6c0000", 
                        "filepath": "C:\\Windows\\system32\\SspiSrv.dll"
                    }, 
                    {
                        "basename": "lsasrv.dll", 
                        "imgsize": 1470464, 
                        "baseaddr": "0x7fefd550000", 
                        "filepath": "C:\\Windows\\system32\\lsasrv.dll"
                    }, 
                    {
                        "basename": "sechost.dll", 
                        "imgsize": 126976, 
                        "baseaddr": "0x7feff680000", 
                        "filepath": "C:\\Windows\\SYSTEM32\\sechost.dll"
                    }, 
                    {
                        "basename": "SspiCli.dll", 
                        "imgsize": 151552, 
                        "baseaddr": "0x7fefd6d0000", 
                        "filepath": "C:\\Windows\\system32\\SspiCli.dll"
                    }, 
                    {
                        "basename": "ADVAPI32.dll", 
                        "imgsize": 897024, 
                        "baseaddr": "0x7fefddd0000", 
                        "filepath": "C:\\Windows\\system32\\ADVAPI32.dll"
                    }, 
                    {
                        "basename": "USER32.dll", 
                        "imgsize": 1024000, 
                        "baseaddr": "0x779c0000", 
                        "filepath": "C:\\Windows\\system32\\USER32.dll"
                    }, 
                    {
                        "basename": "GDI32.dll", 
                        "imgsize": 421888, 
                        "baseaddr": "0x7fefe0b0000", 
                        "filepath": "C:\\Windows\\system32\\GDI32.dll"
                    }, 
                    {
                        "basename": "LPK.dll", 
                        "imgsize": 57344, 
                        "baseaddr": "0x7feff500000", 
                        "filepath": "C:\\Windows\\system32\\LPK.dll"
                    }, 
                    {
                        "basename": "USP10.dll", 
                        "imgsize": 823296, 
                        "baseaddr": "0x7fefdfe0000", 
                        "filepath": "C:\\Windows\\system32\\USP10.dll"
                    }, 
                    {
                        "basename": "SAMSRV.dll", 
                        "imgsize": 774144, 
                        "baseaddr": "0x7fefd3a0000", 
                        "filepath": "C:\\Windows\\system32\\SAMSRV.dll"
                    }, 
                    {
                        "basename": "cryptdll.dll", 
                        "imgsize": 81920, 
                        "baseaddr": "0x7fefd380000", 
                        "filepath": "C:\\Windows\\system32\\cryptdll.dll"
                    }, 
                    {
                        "basename": "MSASN1.dll", 
                        "imgsize": 61440, 
                        "baseaddr": "0x7fefd910000", 
                        "filepath": "C:\\Windows\\system32\\MSASN1.dll"
                    }, 
                    {
                        "basename": "wevtapi.dll", 
                        "imgsize": 446464, 
                        "baseaddr": "0x7fefd310000", 
                        "filepath": "C:\\Windows\\system32\\wevtapi.dll"
                    }, 
                    {
                        "basename": "IMM32.DLL", 
                        "imgsize": 188416, 
                        "baseaddr": "0x7feffc70000", 
                        "filepath": "C:\\Windows\\system32\\IMM32.DLL"
                    }, 
                    {
                        "basename": "MSCTF.dll", 
                        "imgsize": 1085440, 
                        "baseaddr": "0x7feffcc0000", 
                        "filepath": "C:\\Windows\\system32\\MSCTF.dll"
                    }, 
                    {
                        "basename": "cngaudit.dll", 
                        "imgsize": 36864, 
                        "baseaddr": "0x7fefd300000", 
                        "filepath": "C:\\Windows\\system32\\cngaudit.dll"
                    }, 
                    {
                        "basename": "AUTHZ.dll", 
                        "imgsize": 192512, 
                        "baseaddr": "0x7fefd2d0000", 
                        "filepath": "C:\\Windows\\system32\\AUTHZ.dll"
                    }, 
                    {
                        "basename": "ncrypt.dll", 
                        "imgsize": 319488, 
                        "baseaddr": "0x7fefd280000", 
                        "filepath": "C:\\Windows\\system32\\ncrypt.dll"
                    }, 
                    {
                        "basename": "bcrypt.dll", 
                        "imgsize": 139264, 
                        "baseaddr": "0x7fefd250000", 
                        "filepath": "C:\\Windows\\system32\\bcrypt.dll"
                    }, 
                    {
                        "basename": "msprivs.DLL", 
                        "imgsize": 8192, 
                        "baseaddr": "0x756a0000", 
                        "filepath": "C:\\Windows\\system32\\msprivs.DLL"
                    }, 
                    {
                        "basename": "netjoin.dll", 
                        "imgsize": 204800, 
                        "baseaddr": "0x7fefd210000", 
                        "filepath": "C:\\Windows\\system32\\netjoin.dll"
                    }, 
                    {
                        "basename": "negoexts.DLL", 
                        "imgsize": 147456, 
                        "baseaddr": "0x7fefd1e0000", 
                        "filepath": "C:\\Windows\\system32\\negoexts.DLL"
                    }, 
                    {
                        "basename": "Secur32.dll", 
                        "imgsize": 45056, 
                        "baseaddr": "0x7fefd500000", 
                        "filepath": "C:\\Windows\\system32\\Secur32.dll"
                    }, 
                    {
                        "basename": "cryptbase.dll", 
                        "imgsize": 61440, 
                        "baseaddr": "0x7fefd760000", 
                        "filepath": "C:\\Windows\\system32\\cryptbase.dll"
                    }, 
                    {
                        "basename": "kerberos.DLL", 
                        "imgsize": 737280, 
                        "baseaddr": "0x7fefd120000", 
                        "filepath": "C:\\Windows\\system32\\kerberos.DLL"
                    }, 
                    {
                        "basename": "CRYPTSP.dll", 
                        "imgsize": 94208, 
                        "baseaddr": "0x7fefd100000", 
                        "filepath": "C:\\Windows\\system32\\CRYPTSP.dll"
                    }, 
                    {
                        "basename": "WS2_32.dll", 
                        "imgsize": 315392, 
                        "baseaddr": "0x7fefdf10000", 
                        "filepath": "C:\\Windows\\system32\\WS2_32.dll"
                    }, 
                    {
                        "basename": "NSI.dll", 
                        "imgsize": 32768, 
                        "baseaddr": "0x7feff670000", 
                        "filepath": "C:\\Windows\\system32\\NSI.dll"
                    }, 
                    {
                        "basename": "mswsock.dll", 
                        "imgsize": 348160, 
                        "baseaddr": "0x7fefd0a0000", 
                        "filepath": "C:\\Windows\\system32\\mswsock.dll"
                    }, 
                    {
                        "basename": "wship6.dll", 
                        "imgsize": 28672, 
                        "baseaddr": "0x7fefd090000", 
                        "filepath": "C:\\Windows\\System32\\wship6.dll"
                    }, 
                    {
                        "basename": "msv1_0.DLL", 
                        "imgsize": 331776, 
                        "baseaddr": "0x7fefd030000", 
                        "filepath": "C:\\Windows\\system32\\msv1_0.DLL"
                    }, 
                    {
                        "basename": "netlogon.DLL", 
                        "imgsize": 712704, 
                        "baseaddr": "0x7fefcf80000", 
                        "filepath": "C:\\Windows\\system32\\netlogon.DLL"
                    }, 
                    {
                        "basename": "DNSAPI.dll", 
                        "imgsize": 372736, 
                        "baseaddr": "0x7fefcf20000", 
                        "filepath": "C:\\Windows\\system32\\DNSAPI.dll"
                    }, 
                    {
                        "basename": "logoncli.dll", 
                        "imgsize": 196608, 
                        "baseaddr": "0x7fefcef0000", 
                        "filepath": "C:\\Windows\\system32\\logoncli.dll"
                    }, 
                    {
                        "basename": "schannel.DLL", 
                        "imgsize": 356352, 
                        "baseaddr": "0x7fefce90000", 
                        "filepath": "C:\\Windows\\system32\\schannel.DLL"
                    }, 
                    {
                        "basename": "CRYPT32.dll", 
                        "imgsize": 1470464, 
                        "baseaddr": "0x7fefdae0000", 
                        "filepath": "C:\\Windows\\system32\\CRYPT32.dll"
                    }, 
                    {
                        "basename": "wdigest.DLL", 
                        "imgsize": 221184, 
                        "baseaddr": "0x7fefce50000", 
                        "filepath": "C:\\Windows\\system32\\wdigest.DLL"
                    }, 
                    {
                        "basename": "rsaenh.dll", 
                        "imgsize": 290816, 
                        "baseaddr": "0x7fefce00000", 
                        "filepath": "C:\\Windows\\system32\\rsaenh.dll"
                    }, 
                    {
                        "basename": "tspkg.DLL", 
                        "imgsize": 98304, 
                        "baseaddr": "0x7fefcde0000", 
                        "filepath": "C:\\Windows\\system32\\tspkg.DLL"
                    }, 
                    {
                        "basename": "pku2u.DLL", 
                        "imgsize": 282624, 
                        "baseaddr": "0x7fefcd90000", 
                        "filepath": "C:\\Windows\\system32\\pku2u.DLL"
                    }, 
                    {
                        "basename": "bcryptprimitives.dll", 
                        "imgsize": 311296, 
                        "baseaddr": "0x7fefcd40000", 
                        "filepath": "C:\\Windows\\system32\\bcryptprimitives.dll"
                    }, 
                    {
                        "basename": "RpcRtRemote.dll", 
                        "imgsize": 81920, 
                        "baseaddr": "0x7fefd850000", 
                        "filepath": "C:\\Windows\\system32\\RpcRtRemote.dll"
                    }, 
                    {
                        "basename": "efslsaext.dll", 
                        "imgsize": 73728, 
                        "baseaddr": "0x7fefcd20000", 
                        "filepath": "C:\\Windows\\system32\\efslsaext.dll"
                    }, 
                    {
                        "basename": "scecli.DLL", 
                        "imgsize": 253952, 
                        "baseaddr": "0x7fefccc0000", 
                        "filepath": "C:\\Windows\\system32\\scecli.DLL"
                    }, 
                    {
                        "basename": "credssp.dll", 
                        "imgsize": 40960, 
                        "baseaddr": "0x7fefcd00000", 
                        "filepath": "C:\\Windows\\system32\\credssp.dll"
                    }, 
                    {
                        "basename": "WINSTA.dll", 
                        "imgsize": 249856, 
                        "baseaddr": "0x7fefd810000", 
                        "filepath": "C:\\Windows\\system32\\WINSTA.dll"
                    }, 
                    {
                        "basename": "IPHLPAPI.DLL", 
                        "imgsize": 159744, 
                        "baseaddr": "0x7fefb3f0000", 
                        "filepath": "C:\\Windows\\system32\\IPHLPAPI.DLL"
                    }, 
                    {
                        "basename": "WINNSI.DLL", 
                        "imgsize": 45056, 
                        "baseaddr": "0x7fefb3e0000", 
                        "filepath": "C:\\Windows\\system32\\WINNSI.DLL"
                    }, 
                    {
                        "basename": "netutils.dll", 
                        "imgsize": 49152, 
                        "baseaddr": "0x7fefb250000", 
                        "filepath": "C:\\Windows\\system32\\netutils.dll"
                    }, 
                    {
                        "basename": "USERENV.dll", 
                        "imgsize": 122880, 
                        "baseaddr": "0x7fefcbb0000", 
                        "filepath": "C:\\Windows\\system32\\USERENV.dll"
                    }, 
                    {
                        "basename": "profapi.dll", 
                        "imgsize": 61440, 
                        "baseaddr": "0x7fefd870000", 
                        "filepath": "C:\\Windows\\system32\\profapi.dll"
                    }, 
                    {
                        "basename": "wshtcpip.dll", 
                        "imgsize": 28672, 
                        "baseaddr": "0x7fefcaa0000", 
                        "filepath": "C:\\Windows\\System32\\wshtcpip.dll"
                    }, 
                    {
                        "basename": "dssenh.dll", 
                        "imgsize": 204800, 
                        "baseaddr": "0x7fef45f0000", 
                        "filepath": "C:\\Windows\\system32\\dssenh.dll"
                    }, 
                    {
                        "basename": "GPAPI.dll", 
                        "imgsize": 110592, 
                        "baseaddr": "0x7fefcb90000", 
                        "filepath": "C:\\Windows\\system32\\GPAPI.dll"
                    }, 
                    {
                        "basename": "monitor-x64.dll", 
                        "imgsize": 2269184, 
                        "baseaddr": "0x74580000", 
                        "filepath": "C:\\tmpmdfut4\\bin\\monitor-x64.dll"
                    }
                ], 
                "time": 0, 
                "tid": 2972, 
                "first_seen": 1644769718.109375, 
                "ppid": 388, 
                "type": "process"
            }
        ], 
        "processtree": [
            {
                "track": false, 
                "pid": 504, 
                "process_name": "lsass.exe", 
                "command_line": "C:\\Windows\\system32\\lsass.exe", 
                "first_seen": 1644769718.109375, 
                "ppid": 388, 
                "children": []
            }
        ]
    }, 
    "memory": {
        "malconfscan": {
            "data": [], 
            "config": {
                "filter": false
            }
        }, 
        "yarascan": {
            "data": [
                {
                    "owner": "Process svchost.exe Pid 900", 
                    "hexdump": "0x03304768  73 00 79 00 73 00 74 00 65 00 6d 00 69 00 6e 00   s.y.s.t.e.m.i.n.\n0x03304778  66 00 6f 00 2e 00 65 00 78 00 65 00 00 00 00 00   f.o...e.x.e.....\n0x03304788  5a 58 01 73 e7 00 00 80 a6 00 30 03 00 00 00 00   ZX.s......0.....\n0x03304798  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................\n", 
                    "rule": "gen_memory_commands_shell_dev"
                }, 
                {
                    "owner": "Process svchost.exe Pid 900", 
                    "hexdump": "0x042e5618  73 00 79 00 73 00 74 00 65 00 6d 00 69 00 6e 00   s.y.s.t.e.m.i.n.\n0x042e5628  66 00 6f 00 2e 00 65 00 78 00 65 00 00 00 00 00   f.o...e.x.e.....\n0x042e5638  96 ec 71 73 e7 00 00 80 97 01 2e 04 00 00 00 00   ..qs............\n0x042e5648  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ................\n", 
                    "rule": "gen_memory_commands_shell_dev"
                }
            ], 
            "config": {
                "filter": false
            }
        }
    }, 
    "debug": {
        "action": [], 
        "dbgview": [], 
        "errors": [], 
        "log": [
            "2022-02-13 15:28:36,092 [analyzer] DEBUG: Starting analyzer from: C:\\tmpmdfut4\n", 
            "2022-02-13 15:28:36,092 [analyzer] DEBUG: Pipe server name: \\??\\PIPE\\yMZsChqLlwrqzypZhxVrScagqkIycpe\n", 
            "2022-02-13 15:28:36,092 [analyzer] DEBUG: Log pipe server name: \\??\\PIPE\\kHptvfKnBDUvNrxqL\n", 
            "2022-02-13 15:28:37,062 [analyzer] DEBUG: Started auxiliary module Curtain\n", 
            "2022-02-13 15:28:37,062 [analyzer] DEBUG: Started auxiliary module DbgView\n", 
            "2022-02-13 15:28:37,953 [analyzer] DEBUG: Started auxiliary module Disguise\n", 
            "2022-02-13 15:28:38,171 [analyzer] DEBUG: Loaded monitor into process with pid 504\n", 
            "2022-02-13 15:28:38,171 [analyzer] DEBUG: Started auxiliary module DumpTLSMasterSecrets\n", 
            "2022-02-13 15:28:38,171 [analyzer] DEBUG: Started auxiliary module Human\n", 
            "2022-02-13 15:28:38,171 [analyzer] DEBUG: Started auxiliary module InstallCertificate\n", 
            "2022-02-13 15:28:38,187 [analyzer] DEBUG: Started auxiliary module Reboot\n", 
            "2022-02-13 15:28:38,280 [analyzer] DEBUG: Started auxiliary module RecentFiles\n", 
            "2022-02-13 15:28:38,280 [analyzer] DEBUG: Started auxiliary module Screenshots\n", 
            "2022-02-13 15:28:38,280 [analyzer] DEBUG: Started auxiliary module Sysmon\n", 
            "2022-02-13 15:28:38,296 [analyzer] DEBUG: Started auxiliary module LoadZer0m0n\n", 
            "2022-02-13 15:28:38,421 [lib.api.process] ERROR: Failed to execute process from path u'C:\\\\Users\\\\ADMINI~1\\\\AppData\\\\Local\\\\Temp\\\\pg_dump.exe' with arguments ['bin\\\\inject-x86.exe', '--app', u'C:\\\\Users\\\\ADMINI~1\\\\AppData\\\\Local\\\\Temp\\\\pg_dump.exe', '--only-start', '--curdir', 'C:\\\\Users\\\\ADMINI~1\\\\AppData\\\\Local\\\\Temp'] (Error: Command '['bin\\\\inject-x86.exe', '--app', u'C:\\\\Users\\\\ADMINI~1\\\\AppData\\\\Local\\\\Temp\\\\pg_dump.exe', '--only-start', '--curdir', 'C:\\\\Users\\\\ADMINI~1\\\\AppData\\\\Local\\\\Temp']' returned non-zero exit status 1)\n"
        ], 
        "cuckoo": [
            "2022-02-13 18:28:23,327 [cuckoo.core.scheduler] INFO: Task #2748542: acquired machine win7x644 (label=win7x644)\n", 
            "2022-02-13 18:28:23,328 [cuckoo.core.resultserver] DEBUG: Now tracking machine 192.168.168.204 for task #2748542\n", 
            "2022-02-13 18:28:23,437 [cuckoo.auxiliary.sniffer] INFO: Started sniffer with PID 488789 (interface=vboxnet0, host=192.168.168.204)\n", 
            "2022-02-13 18:28:23,606 [cuckoo.common.objects] WARNING: Error enumerating exported functions: 'Invalid NT Headers signature.'\n", 
            "2022-02-13 18:28:23,838 [cuckoo.machinery.virtualbox] DEBUG: Starting vm win7x644\n", 
            "2022-02-13 18:28:24,177 [cuckoo.machinery.virtualbox] DEBUG: Restoring virtual machine win7x644 to vmcloak\n", 
            "2022-02-13 18:33:08,081 [cuckoo.core.guest] INFO: Starting analysis #2748542 on guest (id=win7x644, ip=192.168.168.204)\n", 
            "2022-02-13 18:33:09,087 [cuckoo.core.guest] DEBUG: win7x644: not ready yet\n", 
            "2022-02-13 18:33:14,190 [cuckoo.core.guest] INFO: Guest is running Cuckoo Agent 0.10 (id=win7x644, ip=192.168.168.204)\n", 
            "2022-02-13 18:33:14,347 [cuckoo.core.guest] DEBUG: Uploading analyzer to guest (id=win7x644, ip=192.168.168.204, monitor=latest, size=6659294)\n", 
            "2022-02-13 18:33:18,166 [cuckoo.core.resultserver] DEBUG: Task #2748542: live log analysis.log initialized.\n", 
            "2022-02-13 18:33:20,282 [cuckoo.core.resultserver] DEBUG: Task #2748542 is sending a BSON stream\n", 
            "2022-02-13 18:33:21,570 [cuckoo.core.resultserver] DEBUG: Task #2748542: File upload for 'shots/0001.jpg'\n", 
            "2022-02-13 18:33:21,583 [cuckoo.core.resultserver] DEBUG: Task #2748542 uploaded file length: 133496\n", 
            "2022-02-13 18:33:23,015 [cuckoo.core.guest] WARNING: win7x644: analysis #2748542 caught an exception\n", 
            "Traceback (most recent call last):\n", 
            "  File \"C:/tmpmdfut4/analyzer.py\", line 824, in <module>\n", 
            "    success = analyzer.run()\n", 
            "  File \"C:/tmpmdfut4/analyzer.py\", line 673, in run\n", 
            "    pids = self.package.start(self.target)\n", 
            "  File \"C:\\tmpmdfut4\\modules\\packages\\exe.py\", line 34, in start\n", 
            "    return self.execute(path, args=shlex.split(args))\n", 
            "  File \"C:\\tmpmdfut4\\lib\\common\\abstracts.py\", line 205, in execute\n", 
            "    \"Unable to execute the initial process, analysis aborted.\"\n", 
            "CuckooPackageError: Unable to execute the initial process, analysis aborted.\n", 
            "\n", 
            "2022-02-13 18:33:23,031 [cuckoo.core.plugins] DEBUG: Stopped auxiliary module: Redsocks\n", 
            "2022-02-13 18:33:23,099 [cuckoo.core.plugins] DEBUG: Stopped auxiliary module: Sniffer\n", 
            "2022-02-13 18:33:50,329 [cuckoo.machinery.virtualbox] INFO: Successfully generated memory dump for virtual machine with label win7x644 to path /srv/cuckoo/cwd/storage/analyses/2748542/memory.dmp\n", 
            "2022-02-13 18:33:50,332 [cuckoo.machinery.virtualbox] DEBUG: Stopping vm win7x644\n", 
            "2022-02-13 18:38:32,475 [cuckoo.core.resultserver] DEBUG: Stopped tracking machine 192.168.168.204 for task #2748542\n", 
            "2022-02-13 18:38:32,475 [cuckoo.core.resultserver] DEBUG: Cancel <Context for LOG> for task 2748542\n", 
            "2022-02-13 18:38:32,628 [cuckoo.core.scheduler] DEBUG: Released database task #2748542\n", 
            "2022-02-13 18:38:32,741 [cuckoo.core.scheduler] INFO: Task #2748542: analysis procedure completed\n"
        ]
    }, 
    "strings": [
        "!This program cannot be run in DOS mode.", 
        "Richq{]", 
        "`.rdata", 
        "@.data", 
        ".pdata", 
        "@.rsrc", 
        "@SUVWAVH", 
        "`A^_^][", 
        "C(HcK0H", 
        "9A0~1E", 
        "UVWATAUAVAWH", 
        "A_A^A]A\\_^]", 
        "F8,S<#w", 
        "|$ AVH", 
        "\\$ UVWH", 
        "WAVAWH", 
        " A_A^_", 
        "UVWAVAWH", 
        " A_A^_^]", 
        "|$ AVH", 
        "WAVAWH", 
        " A_A^_H", 
        "|$ AVH", 
        "|$ AVH", 
        "|$ AVH", 
        "t$ AVH", 
        "<}tK<,tG", 
        "|$ AVH", 
        "UVWATAUAVAWH", 
        "PA_A^A]A\\_^]", 
        "@UVATAUAVH", 
        " A^A]A\\^]", 
        "@SWATAVAWH", 
        "0A_A^A\\_[", 
        "0A_A^A\\_[", 
        "0A_A^A\\_[", 
        "HcD$XL", 
        "@SVWATAWH", 
        "0A_A\\_^[", 
        "@UVAVH", 
        "\\$ VWAVH", 
        "L$@E9T", 
        "T$@HcL", 
        "WAVAWH", 
        " A_A^_", 
        "9~x~&3", 
        "D$0H9D$ ", 
        "L$ SUVH", 
        "L$ SWH", 
        "@SVWAVH", 
        "H9s`v!f", 
        "H9s`v#", 
        "H9s`v ", 
        "XA^_^[", 
        "@UWAWH", 
        "H9_`v$H", 
        "H9s`v$f", 
        "|$ AVH", 
        "H9_`v&f", 
        "|$ AVH", 
        "H9{hvVH", 
        "L$ SUVAVH", 
        "8A^^][", 
        "WAVAWH", 
        " A_A^_", 
        "|$ AVH", 
        "@SATAUAVAWH", 
        "@A_A^A]A\\[", 
        "A9~x~/3", 
        "@A_A^A]A\\[", 
        "|$ AVH", 
        "9^htFI", 
        "A8^ u7I", 
        "u49Cx~/H", 
        "WATAUAVAWH", 
        "E9f8u\"L", 
        "A_A^A]A\\_", 
        "t$ WAVAWH", 
        "WATAUAVAWH", 
        "~9LcSxL", 
        "~8LcWxL", 
        " A_A^A]A\\_", 
        "|$ AVH", 
        "D9px~RM", 
        "E9px~NM", 
        "~>LcRxE3", 
        "9{x~e3", 
        "@VWAUH", 
        "0HczxH", 
        "D$X9nx", 
        "|$ ATAVAWH", 
        " A_A^A\\", 
        "|$ AUAVAWH", 
        " A_A^A]", 
        "|$ AVH", 
        "t$ WATAUAVAWH", 
        "A_A^A]A\\_", 
        "\\$ UVWATAUAVAWH", 
        "A_A^A]A\\_^]", 
        "@SUVWAVH", 
        "A^_^][", 
        "D8s|uXD", 
        "\\uLD8s,uFD8s|", 
        "@UVAVH", 
        "\\$ VWAVH", 
        "l$ VWATAVAW", 
        "A_A^A\\_^", 
        "@SUATAVAWH", 
        "PA_A^A\\][", 
        "L$ SUVWAVH", 
        "0A^_^][", 
        "@SUVWAW", 
        "H;u8tPL", 
        "A__^][", 
        "UVWATAUAVAWH", 
        "E(I9E ", 
        "E(I9E ", 
        "A_A^A]A\\_^]", 
        "UVWATAUAVAWH", 
        "A_A^A]A\\_^]", 
        "VWATAVAWH", 
        " A_A^A\\_^", 
        "SWAUAWH", 
        "hA_A]_[", 
        "hA_A]_[", 
        "SUWATAUAVAWH", 
        "ZD8{Jt", 
        "A_A^A]A\\_][", 
        "@SUVWAUAVAWH", 
        "`A_A^A]_^][", 
        "@SUVWATAUAVAWH", 
        "HA_A^A]A\\_^][", 
        "SUVWAUAVAWH", 
        "PA_A^A]_^][", 
        "@SUVWATAVAWH", 
        "PA_A^A\\_^][", 
        "UVAUAVH", 
        "D$dtFA", 
        "A^A]^]", 
        "WATAUAVAWH", 
        " A_A^A]A\\_", 
        "SVWAVH", 
        "@SUVWATAUAVAWH", 
        "HA_A^A]A\\_^][", 
        "SWAUAVH", 
        "A^A]_[", 
        "@SUVWAUAVAWH", 
        "`A_A^A]_^][", 
        "@SUVWATAUAVAWH", 
        "hA_A^A]A\\_^][", 
        "SWATAVH", 
        "A^A\\_[", 
        "@SWAUH", 
        "@SWATH", 
        "@SAUAVH", 
        "`A^A][", 
        "`A^A][", 
        "u/L9%$", 
        "UATAWH", 
        "`A_A\\]", 
        "UATAWH", 
        "`A_A\\]", 
        "WATAUAVAWH", 
        "A_A^A]A\\_", 
        "VAVAWH", 
        "SUWATAUAVAWH", 
        "PA_A^A]A\\_][", 
        "ATAUAVAWH", 
        "A_A^A]A\\", 
        "SUVATAUAVAWH", 
        "@A_A^A]A\\^][", 
        "9o0~bE3", 
        "@SUVWATAUAVAWH", 
        "A_A^A]A\\_^][", 
        "@SUVWATAUAVAWH", 
        "A_A^A]A\\_^][", 
        "t$ WATAUAVAWH", 
        "A_A^A]A\\_", 
        "WATAUAVAWH", 
        "A_A^A]A\\_", 
        "@SUVWATAUAVAWH", 
        "9k`~<3", 
        "A_A^A]A\\_^][", 
        "SUVWATAUAVAWH", 
        "A_A^A]A\\_^][", 
        "SUVWAUH", 
        "A]_^][", 
        "A]_^][", 
        "SUVAVH", 
        "D8c8tAH", 
        "UWATAWH", 
        "<vt<<iu", 
        "A_A\\_]", 
        "UWAUAVH", 
        "GE<btt<ft", 
        "A^A]_]", 
        "{BOtjH", 
        "CB<At,<Dt", 
        "WAUAWH", 
        "@8oXtp9oht+A", 
        "Gx<ttx<OttI", 
        "Gx<At'<Dt", 
        "<Rt<ft", 
        "G`<At&<Dt", 
        "SUATAUAVAWH", 
        "{Hfu\u001fH", 
        "{Hmu*H", 
        "et'<mt", 
        "<pt<xuqH", 
        "{HfulH", 
        "CK<dt9<it5<nu", 
        "A_A^A]A\\][", 
        "UAVAWH", 
        "r8HcZ@H", 
        "UVWATAUAVAWH", 
        "A_A^A]A\\_^]", 
        "WAVAWH", 
        "SUVAWH", 
        "D8kht6H", 
        "D8kit6H", 
        "SAUAVH", 
        "D9fX~eM", 
        "s@D8sc", 
        "UVWATAUAVAWH", 
        "A_A^A]A\\_^]", 
        "l$ VAVAWH", 
        " A_A^^", 
        "9\\$0~vH", 
        "SUWAUAVH", 
        "A^A]_][", 
        "@SATAUAWH", 
        "HA_A]A\\[", 
        "@SVAWH", 
        "|$ AVH", 
        "@SUVWATAUAVAWH", 
        "A_A^A]A\\_^][", 
        "|$ AVH", 
        "|$ ATAVAWH", 
        " A_A^A\\", 
        "|$ ATAVAWH", 
        " A_A^A\\", 
        "UAVAWH", 
        "9Z0~33", 
        " A_A^]", 
        "|$ AVH", 
        "@UATAWH", 
        "0A_A\\]", 
        "UVWATAUAVAWH", 
        "A_A^A]A\\_^]", 
        "\\$ UVWATAUAVAWH", 
        " A_A^A]A\\_^]", 
        "UVWATAUAVAWH", 
        " A_A^A]A\\_^]", 
        "@SUAWH", 
        "|$ AVH", 
        "SWATAVH", 
        "xA^A\\_[", 
        "D9m0~YH", 
        "6D9f0~jI", 
        "xA^A\\_[", 
        "WATAUAVAWH", 
        "0A_A^A]A\\_H", 
        "LcD$xH", 
        "@SVAWH", 
        "y@1upD8yAtjH9A8ud", 
        "xHvu.A", 
        "xHcuIH9H8uC", 
        "H9A8td", 
        "H9A8tB", 
        "J8McB@I", 
        "L$ SUVWAVH", 
        "0A^_^][", 
        "@SUWAVH", 
        "</t:<\\t6", 
        "D$ </t?<\\t;", 
        "D$\"</t", 
        "@SUVWATH", 
        "9\\$P~I", 
        "pA\\_^][", 
        "@UWATAVAWH", 
        "A_A^A\\_]", 
        "A_A^A\\_]", 
        "H+D$PH+L$0H", 
        "Lc\\$ H", 
        "Lc\\$ I", 
        "Lc\\$ E", 
        "H+D$(H", 
        "D$ +D$(H", 
        "D$ +D$(H", 
        "\\$ UVWATAUAVAWH", 
        "D$Xfff", 
        "A_A^A]A\\_^]", 
        "H+D$(H", 
        "@8k$u\u001fH", 
        "l$ VWATAVAWH", 
        "D8c$u\u001fH", 
        "A_A^A\\_^", 
        "l$ AVH", 
        "|$ AVH", 
        "WAVAWH", 
        " A_A^_", 
        "@UWATAUAVAWH", 
        "A_A^A]A\\_]", 
        "WATAUAVAWH", 
        "HcL$xH", 
        " A_A^A]A\\_", 
        "|$ AVH", 
        "</tV<\\tR", 
        "</t7<\\t3H", 
        "|$ ATAVAWH", 
        "<\\ubLc", 
        " A_A^A\\", 
        "l$ VAUAWH", 
        " A_A]^", 
        "I9?tK3", 
        " A_A]^", 
        " A_A]^", 
        " A_A]^", 
        " A_A]^", 
        " A_A]^", 
        " A_A]^", 
        "uJH9D+", 
        "WATAUAVAWH", 
        " A_A^A]A\\_", 
        "D$H9D$ s\"", 
        "LcA<E3", 
        "H3E H3E", 
        "reading extensions", 
        "identifying extension members", 
        "reading schemas", 
        "reading user-defined tables", 
        "reading user-defined functions", 
        "reading user-defined types", 
        "reading procedural languages", 
        "reading user-defined aggregate functions", 
        "reading user-defined operators", 
        "reading user-defined operator classes", 
        "reading user-defined operator families", 
        "reading user-defined text search parsers", 
        "reading user-defined text search templates", 
        "reading user-defined text search dictionaries", 
        "reading user-defined text search configurations", 
        "reading user-defined foreign-data wrappers", 
        "reading user-defined foreign servers", 
        "reading default privileges", 
        "reading user-defined collations", 
        "reading user-defined conversions", 
        "reading type casts", 
        "reading table inheritance information", 
        "reading event triggers", 
        "finding extension tables", 
        "finding inheritance relationships", 
        "reading column info for interesting tables", 
        "flagging inherited columns in subtables", 
        "reading indexes", 
        "reading constraints", 
        "reading triggers", 
        "reading rewrite rules", 
        "failed sanity check, parent OID %u of table \"%s\" (OID %u) not found", 
        "could not parse numeric array \"%s\": too many numbers", 
        "could not parse numeric array \"%s\": invalid character in number", 
        "compress_io", 
        "invalid compression code: %d", 
        "could not initialize compression library: %s", 
        "could not close compression stream: %s", 
        "could not compress data: %s", 
        "could not uncompress data: %s", 
        "could not close compression library: %s", 
        "could not read from input file: %s", 
        "could not read from input file: end of file", 
        "_XXXXXXX", 
        "0123456789abcdef", 
        "%d.%d.%d", 
        "shell command argument contains a newline or carriage return: \"%s\"", 
        "database name contains a newline or carriage return: \"%s\"", 
        "\\connect ", 
        "dbname=", 
        "-reuse-previous=on ", 
        "%sREVOKE ALL", 
        " ON %s %s FROM PUBLIC;", 
        "DATABASE", 
        "%sGRANT CONNECT ON %s %s TO PUBLIC;", 
        " ON %s %s FROM %s;", 
        "%sGRANT %s ON %s %s TO %s;", 
        "%sGRANT %s ON %s %s TO %s WITH GRANT OPTION;", 
        "SET SESSION AUTHORIZATION %s;", 
        "%sGRANT %s ON %s %s TO ", 
        "PUBLIC;", 
        "group ", 
        "GROUP %s;", 
        "PUBLIC", 
        "GROUP %s", 
        " WITH GRANT OPTION;", 
        "RESET SESSION AUTHORIZATION;", 
        "ALTER DEFAULT PRIVILEGES FOR ROLE %s ", 
        "IN SCHEMA %s ", 
        "SEQUENCE", 
        "TABLES", 
        "SEQUENCES", 
        "SELECT", 
        "INSERT", 
        "REFERENCES", 
        "DELETE", 
        "TRIGGER", 
        "TRUNCATE", 
        "UPDATE", 
        "UPDATE,DELETE", 
        "FUNCTION", 
        "FUNCTIONS", 
        "EXECUTE", 
        "LANGUAGE", 
        "SCHEMA", 
        "CREATE", 
        "CONNECT", 
        "TEMPORARY", 
        "TABLESPACE", 
        "FOREIGN DATA WRAPPER", 
        "FOREIGN SERVER", 
        "FOREIGN TABLE", 
        "LARGE OBJECT", 
        "  AND ", 
        "WHERE ", 
        "|*+?()[]{}.^$\\", 
        "^(.*)$", 
        "(%s ~ ", 
        "        OR %s ~ ", 
        "SELECT provider, label FROM pg_catalog.pg_shseclabel WHERE classoid = '%s'::pg_catalog.regclass AND objoid = %u", 
        "SECURITY LABEL FOR %s ON %s", 
        " %s IS ", 
        "absolute", 
        "access", 
        "action", 
        "aggregate", 
        "always", 
        "analyse", 
        "analyze", 
        "assertion", 
        "assignment", 
        "asymmetric", 
        "attribute", 
        "authorization", 
        "backward", 
        "before", 
        "between", 
        "bigint", 
        "binary", 
        "boolean", 
        "called", 
        "cascade", 
        "cascaded", 
        "catalog", 
        "character", 
        "characteristics", 
        "checkpoint", 
        "cluster", 
        "coalesce", 
        "collate", 
        "collation", 
        "column", 
        "comment", 
        "comments", 
        "commit", 
        "committed", 
        "concurrently", 
        "configuration", 
        "connection", 
        "constraint", 
        "constraints", 
        "content", 
        "continue", 
        "conversion", 
        "create", 
        "current", 
        "current_catalog", 
        "current_date", 
        "current_role", 
        "current_schema", 
        "current_time", 
        "current_timestamp", 
        "current_user", 
        "cursor", 
        "database", 
        "deallocate", 
        "decimal", 
        "declare", 
        "default", 
        "defaults", 
        "deferrable", 
        "deferred", 
        "definer", 
        "delete", 
        "delimiter", 
        "delimiters", 
        "dictionary", 
        "disable", 
        "discard", 
        "distinct", 
        "document", 
        "domain", 
        "double", 
        "enable", 
        "encoding", 
        "encrypted", 
        "escape", 
        "except", 
        "exclude", 
        "excluding", 
        "exclusive", 
        "execute", 
        "exists", 
        "explain", 
        "extension", 
        "external", 
        "extract", 
        "family", 
        "filter", 
        "following", 
        "foreign", 
        "forward", 
        "freeze", 
        "function", 
        "functions", 
        "global", 
        "granted", 
        "greatest", 
        "handler", 
        "having", 
        "header", 
        "identity", 
        "immediate", 
        "immutable", 
        "implicit", 
        "including", 
        "increment", 
        "indexes", 
        "inherit", 
        "inherits", 
        "initially", 
        "inline", 
        "insensitive", 
        "insert", 
        "instead", 
        "integer", 
        "intersect", 
        "interval", 
        "invoker", 
        "isnull", 
        "isolation", 
        "language", 
        "lateral", 
        "lc_collate", 
        "lc_ctype", 
        "leading", 
        "leakproof", 
        "listen", 
        "localtime", 
        "localtimestamp", 
        "location", 
        "mapping", 
        "materialized", 
        "maxvalue", 
        "minute", 
        "minvalue", 
        "national", 
        "natural", 
        "nothing", 
        "notify", 
        "notnull", 
        "nowait", 
        "nullif", 
        "numeric", 
        "object", 
        "offset", 
        "operator", 
        "option", 
        "options", 
        "ordinality", 
        "overlaps", 
        "overlay", 
        "parser", 
        "partial", 
        "partition", 
        "passing", 
        "password", 
        "placing", 
        "position", 
        "preceding", 
        "precision", 
        "prepare", 
        "prepared", 
        "preserve", 
        "primary", 
        "privileges", 
        "procedural", 
        "procedure", 
        "program", 
        "reassign", 
        "recheck", 
        "recursive", 
        "references", 
        "refresh", 
        "reindex", 
        "relative", 
        "release", 
        "rename", 
        "repeatable", 
        "replace", 
        "replica", 
        "restart", 
        "restrict", 
        "returning", 
        "returns", 
        "revoke", 
        "rollback", 
        "savepoint", 
        "schema", 
        "scroll", 
        "search", 
        "second", 
        "security", 
        "select", 
        "sequence", 
        "sequences", 
        "serializable", 
        "server", 
        "session", 
        "session_user", 
        "similar", 
        "simple", 
        "smallint", 
        "snapshot", 
        "stable", 
        "standalone", 
        "statement", 
        "statistics", 
        "stdout", 
        "storage", 
        "strict", 
        "substring", 
        "symmetric", 
        "system", 
        "tables", 
        "tablespace", 
        "template", 
        "temporary", 
        "timestamp", 
        "trailing", 
        "transaction", 
        "trigger", 
        "truncate", 
        "trusted", 
        "unbounded", 
        "uncommitted", 
        "unencrypted", 
        "unique", 
        "unknown", 
        "unlisten", 
        "unlogged", 
        "update", 
        "vacuum", 
        "validate", 
        "validator", 
        "values", 
        "varchar", 
        "variadic", 
        "varying", 
        "verbose", 
        "version", 
        "volatile", 
        "whitespace", 
        "window", 
        "within", 
        "without", 
        "wrapper", 
        "xmlattributes", 
        "xmlconcat", 
        "xmlelement", 
        "xmlexists", 
        "xmlforest", 
        "xmlparse", 
        "xmlroot", 
        "xmlserialize", 
        "parallel archiver", 
        "%s: WSAStartup failed: %d", 
        "terminated by user", 
        "could not create communication channels: %s", 
        "LOCK TABLE %s IN ACCESS SHARE MODE NOWAIT", 
        "could not obtain lock on relation \"%s\"", 
        "This usually means that someone requested an ACCESS EXCLUSIVE lock on the table after the pg_dump parent process had gotten the initial ACCESS SHARE lock on the table.", 
        "RESTORE ", 
        "unrecognized command received from master: \"%s\"", 
        "a worker process died unexpectedly", 
        "OK RESTORE ", 
        "OK DUMP ", 
        "invalid message received from worker: \"%s\"", 
        "error processing a parallel work item", 
        "could not write to the communication channel: %s", 
        "select() failed: %s", 
        "pgpipe: could not create socket: error code %d", 
        "pgpipe: could not bind: error code %d", 
        "pgpipe: could not listen: error code %d", 
        "pgpipe: getsockname() failed: error code %d", 
        "pgpipe: could not create second socket: error code %d", 
        "pgpipe: could not connect socket: error code %d", 
        "pgpipe: could not accept connection: error code %d", 
        "archiver", 
        "could not close output file: %s", 
        "WARNING: archive items not in correct section order", 
        "unexpected section code %d", 
        "-C and -1 are incompatible options", 
        "parallel restore is not supported with this archive file format", 
        "parallel restore is not supported with archives made by pre-8.0 pg_dump", 
        "connecting to database for restore", 
        "direct database connections are not supported in pre-1.3 archives", 
        "implied data-only restore", 
        "-- PostgreSQL database dump", 
        "-- Dumped from database version %s", 
        "-- Dumped by pg_dump version %s", 
        "Started on", 
        "BEGIN;", 
        "dropping %s %s", 
        "ALTER TABLE", 
        "ALTER TABLE IF EXISTS", 
        "DEFAULT", 
        "CREATE OR REPLACE VIEW", 
        "CONSTRAINT", 
        "CHECK CONSTRAINT", 
        "FK CONSTRAINT", 
        "DROP CONSTRAINT", 
        "DROP %s", 
        "%s%s IF EXISTS%s", 
        "WARNING: could not find where to insert IF EXISTS in statement \"%s\"", 
        "COMMIT;", 
        "Completed on", 
        "-- PostgreSQL database dump complete", 
        "WARNING", 
        "warning from original dump file: %s", 
        "creating %s %s", 
        "connecting to new database \"%s\"", 
        "BLOB COMMENTS", 
        "processing %s", 
        "pg_catalog", 
        "processing data for table \"%s\"", 
        "TRUNCATE TABLE %s%s;", 
        "executing %s %s", 
        "disabling triggers for %s", 
        "ALTER TABLE %s DISABLE TRIGGER ALL;", 
        "enabling triggers for %s", 
        "ALTER TABLE %s ENABLE TRIGGER ALL;", 
        "internal error -- WriteData cannot be called outside the context of a DataDumper routine", 
        "; Archive created at %s", 
        ";     dbname: %s", 
        ";     TOC Entries: %d", 
        ";     Compression: %d", 
        "CUSTOM", 
        "DIRECTORY", 
        "UNKNOWN", 
        ";     Dump Version: %d.%d-%d", 
        ";     Format: %s", 
        ";     Integer: %d bytes", 
        ";     Offset: %d bytes", 
        ";     Dumped from database version: %s", 
        ";     Dumped by pg_dump version: %s", 
        "; Selected TOC Entries:", 
        "%d; %u %u %s %s %s %s", 
        "depends on:", 
        "large-object output not supported in chosen format", 
        "restored %d large objects", 
        "restored %d large object", 
        "restoring large object with OID %u", 
        "could not create large object %u: %s", 
        "could not open large object %u: %s", 
        "SELECT pg_catalog.lo_open(pg_catalog.lo_create('%u'), %d);", 
        "SELECT pg_catalog.lo_open('%u', %d);", 
        "SELECT pg_catalog.lo_close(0);", 
        "could not open TOC file \"%s\": %s", 
        "WARNING: line ignored: %s", 
        "could not find entry for ID %d", 
        "could not close TOC file: %s", 
        "could not open output file \"%s\": %s", 
        "could not open output file: %s", 
        "wrote %lu bytes of large object data (result = %lu)", 
        "wrote %lu byte of large object data (result = %lu)", 
        "could not write to large object (result: %lu, expected: %lu)", 
        "SELECT pg_catalog.lowrite(0, %s);", 
        "could not write to output file: %s", 
        "Error while INITIALIZING:", 
        "Error while PROCESSING TOC:", 
        "Error while FINALIZING:", 
        "Error from TOC entry %d; %u %u %s %s %s", 
        "bad dumpId", 
        "TABLE DATA", 
        "bad table dumpId for TABLE DATA item", 
        "unexpected data offset flag %d", 
        "file offset in dump file is too large", 
        "%s/toc.dat", 
        "directory name too long: \"%s\"", 
        "%s/toc.dat.gz", 
        "directory \"%s\" does not appear to be a valid archive (\"toc.dat\" does not exist)", 
        "could not open input file \"%s\": %s", 
        "could not open input file: %s", 
        "could not read input file: %s", 
        "input file is too short (read %lu, expected 5)", 
        "-- PostgreSQL database cluster dump", 
        "input file appears to be a text format dump. Please use psql.", 
        "input file does not appear to be a valid archive (too short?)", 
        "input file does not appear to be a valid archive", 
        "could not close input file: %s", 
        "9.4.15", 
        "unrecognized file format \"%d\"", 
        "entry ID %d out of range -- perhaps a corrupt TOC", 
        "COMMENT", 
        "ACL LANGUAGE", 
        "read TOC entry %d (ID %d) for %s %s", 
        "ENCODING", 
        "STDSTRINGS", 
        "unrecognized encoding \"%s\"", 
        "invalid ENCODING item: %s", 
        "invalid STDSTRINGS item: %s", 
        "SECURITY LABEL", 
        "SEQUENCE SET", 
        "LARGE OBJECT ", 
        "<Init>", 
        "Max OID", 
        "DEFAULT ACL", 
        "MATERIALIZED VIEW DATA", 
        "SET statement_timeout = 0;", 
        "SET lock_timeout = 0;", 
        "SET client_encoding = '%s';", 
        "SET standard_conforming_strings = %s;", 
        "SET ROLE %s;", 
        "SET check_function_bodies = false;", 
        "SET client_min_messages = warning;", 
        "SET escape_string_warning = off;", 
        "SET SESSION AUTHORIZATION ", 
        "could not set session user to \"%s\": %s", 
        "SET default_with_oids = %s;", 
        "could not set default_with_oids: %s", 
        "\\connect -", 
        "SET search_path = %s", 
        ", pg_catalog", 
        "could not set search_path to \"%s\": %s", 
        "SET default_tablespace = ''", 
        "SET default_tablespace = %s", 
        "could not set default_tablespace to %s: %s", 
        "MATERIALIZED VIEW", 
        "COLLATION", 
        "CONVERSION", 
        "DOMAIN", 
        "TEXT SEARCH DICTIONARY", 
        "TEXT SEARCH CONFIGURATION", 
        "PROCEDURAL LANGUAGE", 
        "EVENT TRIGGER", 
        "SERVER", 
        "USER MAPPING", 
        "LARGE OBJECT %s", 
        "AGGREGATE", 
        "OPERATOR", 
        "OPERATOR CLASS", 
        "OPERATOR FAMILY", 
        "WARNING: don't know how to set owner for object type \"%s\"", 
        "public", 
        "SCHEMA public", 
        "Data for ", 
        "-- TOC entry %d (class %u OID %u)", 
        "-- Dependencies:", 
        "-- %sName: %s; Type: %s; Schema: %s; Owner: %s", 
        "; Tablespace: %s", 
        "CREATE SCHEMA %s;", 
        "ALTER ", 
        " OWNER TO %s;", 
        "did not find magic string in file header", 
        "unsupported version (%d.%d) in file header", 
        "sanity check on integer size (%lu) failed", 
        "WARNING: archive was made on a machine with larger integers, some operations might fail", 
        "expected format (%d) differs from format found in file (%d)", 
        "WARNING: invalid creation date in header", 
        "%Y-%m-%d %H:%M:%S", 
        "-- %s %s", 
        "entering restore_toc_entries_prefork", 
        "processing item %d %s %s", 
        "entering restore_toc_entries_parallel", 
        "entering main parallel loop", 
        "skipping item %d %s %s", 
        "launching item %d %s %s", 
        "finished main parallel loop", 
        "entering restore_toc_entries_postfork", 
        "processing missed item %d %s %s", 
        "no item ready", 
        "could not find slot of finished worker", 
        "finished item %d %s %s", 
        "worker process failed: exit code %d", 
        "transferring dependency %d -> %d to %d", 
        "reducing dependencies for %d", 
        "table \"%s\" could not be created, will not restore its data", 
        "custom archiver", 
        "-- Data Pos: %lld", 
        "invalid OID for large object", 
        "unrecognized data block type (%d) while searching archive", 
        "error during file seek: %s", 
        "could not find block ID %d in archive -- possibly due to out-of-order restore request, which cannot be handled due to lack of data offsets in archive", 
        "could not find block ID %d in archive -- possibly due to out-of-order restore request, which cannot be handled due to non-seekable input file", 
        "could not find block ID %d in archive -- possibly corrupt archive", 
        "found unexpected block ID (%d) when reading data -- expected %d", 
        "unrecognized data block type %d while restoring archive", 
        "could not determine seek position in archive file: %s", 
        "could not close archive file: %s", 
        "can only reopen input archives", 
        "parallel restore from standard input is not supported", 
        "parallel restore from non-seekable file is not supported", 
        "could not set seek position in archive file: %s", 
        "compressor active", 
        "OK RESTORE %d %d %d", 
        "RESTORE %d", 
        "%u %u %u%n", 
        "WARNING: ftell mismatch with expected position -- ftell used", 
        "archiver (db)", 
        "server_version", 
        "could not get server_version from libpq", 
        "server version: %s; %s version: %s", 
        "aborting because of server version mismatch", 
        "connecting to database \"%s\" as user \"%s\"", 
        "Password: ", 
        "out of memory", 
        "dbname", 
        "fallback_application_name", 
        "failed to reconnect to database", 
        "could not reconnect to database: %s", 
        "Password incorrect", 
        "Connecting to %s as %s", 
        "connection needs password", 
        "already connected to a database", 
        "failed to connect to database", 
        "connection to database \"%s\" failed: %s", 
        "query failed: %s", 
        "query was: %s", 
        "%s: %s    Command was: %s", 
        "could not execute query", 
        "error returned by PQputCopyData: %s", 
        "error returned by PQputCopyEnd: %s", 
        "COPY failed for table \"%s\": %s", 
        "WARNING: unexpected extra results during COPY of table \"%s\"", 
        "could not start database transaction", 
        "could not commit database transaction", 
        "COMMIT", 
        "SELECT pg_catalog.lo_unlink(oid) FROM pg_catalog.pg_largeobject_metadata WHERE oid = '%u';", 
        "SELECT CASE WHEN EXISTS(SELECT 1 FROM pg_catalog.pg_largeobject WHERE loid = '%u') THEN pg_catalog.lo_unlink('%u') END;", 
        "directory archiver", 
        "no output directory specified", 
        "could not read directory \"%s\": %s", 
        "could not close directory \"%s\": %s", 
        "could not create directory \"%s\": %s", 
        "toc.dat", 
        "%d.dat", 
        "blobs.toc", 
        "-- File: %s", 
        "could not close data file: %s", 
        "could not open large object TOC file \"%s\" for input: %s", 
        "invalid line in large object TOC file \"%s\": \"%s\"", 
        "error reading large object TOC file \"%s\"", 
        "could not close large object TOC file \"%s\": %s", 
        "%s/blob_%u.dat", 
        "%u blob_%u.dat", 
        "could not write to blobs TOC file", 
        "file name too long: \"%s\"", 
        "DUMP %d", 
        "error during backup", 
        "OK DUMP %d", 
        "this format cannot be read", 
        "tar archiver", 
        "could not open TOC file \"%s\" for output: %s", 
        "could not open TOC file for output: %s", 
        "compression is not supported by tar archive format", 
        "could not open TOC file \"%s\" for input: %s", 
        "could not open TOC file for input: %s", 
        "%d.dat.gz", 
        "could not find file \"%s\" in archive", 
        "pg_temp_", 
        "could not generate temporary file name: %s", 
        "could not open temporary file", 
        "could not close tar member", 
        "internal error -- neither th nor fh specified in tarReadRaw()", 
        " FROM stdin;", 
        "unexpected COPY statement syntax: \"%s\"", 
        " FROM '$$PATH$$/%s';", 
        "\\i $$PATH$$/%s", 
        "restore.sql", 
        "-- NOTE:", 
        "-- File paths need to be edited. Search for $$PATH$$ and", 
        "-- replace it with the path to the directory containing", 
        "-- the extracted data files.", 
        "invalid OID for large object (%u)", 
        "blob_%u.dat%s", 
        "ustar  ", 
        "ustar00", 
        "could not close temporary file: %s", 
        "actual file length (%s) does not match expected (%s)", 
        "moving from position %s to next member at file position %s", 
        "now at file position %s", 
        "could not find header for file \"%s\" in tar archive", 
        "skipping tar member %s", 
        "restoring data out of order is not supported in this archive format: \"%s\" is required, but comes before \"%s\" in the archive file.", 
        "incomplete tar header found (%lu bytes)", 
        "incomplete tar header found (%lu byte)", 
        "TOC Entry %s at %s (length %s, checksum %d)", 
        "corrupt tar header found in %s (expected %d, computed %d) file position %s", 
        "pre-data", 
        "post-data", 
        "%s: unrecognized section name: \"%s\"", 
        "Try \"%s --help\" for more information.", 
        "%s: [%s] ", 
        "out of on_exit_nicely slots", 
        "data-only", 
        "format", 
        "ignore-version", 
        "no-reconnect", 
        "no-owner", 
        "exclude-schema", 
        "schema-only", 
        "superuser", 
        "exclude-table", 
        "no-password", 
        "username", 
        "no-privileges", 
        "no-acl", 
        "compress", 
        "attribute-inserts", 
        "binary-upgrade", 
        "column-inserts", 
        "disable-dollar-quoting", 
        "disable-triggers", 
        "exclude-table-data", 
        "if-exists", 
        "inserts", 
        "lock-wait-timeout", 
        "no-tablespaces", 
        "quote-all-identifiers", 
        "section", 
        "serializable-deferrable", 
        "use-set-session-authorization", 
        "no-security-labels", 
        "no-synchronized-snapshots", 
        "no-unlogged-table-data", 
        "pg_dump-9.4", 
        "opaque", 
        "pg_backup", 
        "--help", 
        "--version", 
        "pg_dump (PostgreSQL) 9.4.15", 
        "abcCd:E:f:F:h:ij:n:N:oOp:RsS:t:T:U:vwWxZ:", 
        "compression level must be in range 0..9", 
        "%s: too many command-line arguments (first is \"%s\")", 
        "options -s/--schema-only and -a/--data-only cannot be used together", 
        "options -c/--clean and -a/--data-only cannot be used together", 
        "options --inserts/--column-inserts and -o/--oids cannot be used together", 
        "(The INSERT command cannot set OIDs.)", 
        "option --if-exists requires option -c/--clean", 
        "invalid number of parallel jobs", 
        "parallel backup only supported by the directory format", 
        "could not open output file \"%s\" for writing", 
        "SELECT pg_catalog.pg_is_in_recovery()", 
        "SELECT rolname FROM pg_catalog.pg_roles WHERE oid =", 
        "SELECT usename FROM pg_catalog.pg_user WHERE usesysid =", 
        "SELECT usename FROM pg_user WHERE usesysid =", 
        "Synchronized snapshots are not supported by this server version.", 
        "Run with --no-synchronized-snapshots instead if you do not need", 
        "synchronized snapshots.", 
        "last built-in OID is %u", 
        "No matching schemas were found", 
        "No matching tables were found", 
        "%s dumps a database as a text file or to other formats.", 
        "Usage:", 
        "  %s [OPTION]... [DBNAME]", 
        "General options:", 
        "  -f, --file=FILENAME          output file or directory name", 
        "  -F, --format=c|d|t|p         output file format (custom, directory, tar,", 
        "                               plain text (default))", 
        "  -j, --jobs=NUM               use this many parallel jobs to dump", 
        "  -v, --verbose                verbose mode", 
        "  -V, --version                output version information, then exit", 
        "  -Z, --compress=0-9           compression level for compressed formats", 
        "  --lock-wait-timeout=TIMEOUT  fail after waiting TIMEOUT for a table lock", 
        "  -?, --help                   show this help, then exit", 
        "Options controlling the output content:", 
        "  -a, --data-only              dump only the data, not the schema", 
        "  -b, --blobs                  include large objects in dump", 
        "  -c, --clean                  clean (drop) database objects before recreating", 
        "  -C, --create                 include commands to create database in dump", 
        "  -E, --encoding=ENCODING      dump the data in encoding ENCODING", 
        "  -n, --schema=SCHEMA          dump the named schema(s) only", 
        "  -N, --exclude-schema=SCHEMA  do NOT dump the named schema(s)", 
        "  -o, --oids                   include OIDs in dump", 
        "  -O, --no-owner               skip restoration of object ownership in", 
        "                               plain-text format", 
        "  -s, --schema-only            dump only the schema, no data", 
        "  -S, --superuser=NAME         superuser user name to use in plain-text format", 
        "  -t, --table=TABLE            dump the named table(s) only", 
        "  -T, --exclude-table=TABLE    do NOT dump the named table(s)", 
        "  -x, --no-privileges          do not dump privileges (grant/revoke)", 
        "  --binary-upgrade             for use by upgrade utilities only", 
        "  --column-inserts             dump data as INSERT commands with column names", 
        "  --disable-dollar-quoting     disable dollar quoting, use SQL standard quoting", 
        "  --disable-triggers           disable triggers during data-only restore", 
        "  --exclude-table-data=TABLE   do NOT dump data for the named table(s)", 
        "  --if-exists                  use IF EXISTS when dropping objects", 
        "  --inserts                    dump data as INSERT commands, rather than COPY", 
        "  --no-security-labels         do not dump security label assignments", 
        "  --no-synchronized-snapshots  do not use synchronized snapshots in parallel jobs", 
        "  --no-tablespaces             do not dump tablespace assignments", 
        "  --no-unlogged-table-data     do not dump unlogged table data", 
        "  --quote-all-identifiers      quote all identifiers, even if not key words", 
        "  --section=SECTION            dump named section (pre-data, data, or post-data)", 
        "  --serializable-deferrable    wait until the dump can run without anomalies", 
        "  --use-set-session-authorization", 
        "                               use SET SESSION AUTHORIZATION commands instead of", 
        "                               ALTER OWNER commands to set ownership", 
        "Connection options:", 
        "  -d, --dbname=DBNAME      database to dump", 
        "  -h, --host=HOSTNAME      database server host or socket directory", 
        "  -p, --port=PORT          database server port number", 
        "  -U, --username=NAME      connect as specified database user", 
        "  -w, --no-password        never prompt for password", 
        "  -W, --password           force password prompt (should happen automatically)", 
        "  --role=ROLENAME          do SET ROLE before dump", 
        "If no database name is supplied, then the PGDATABASE environment", 
        "variable value is used.", 
        "Report bugs to <pgsql-bugs@postgresql.org>.", 
        "invalid client encoding \"%s\" specified", 
        "standard_conforming_strings", 
        "SET ROLE %s", 
        "SET DATESTYLE = ISO", 
        "SET INTERVALSTYLE = POSTGRES", 
        "SET extra_float_digits TO 3", 
        "SET extra_float_digits TO 2", 
        "SET synchronize_seqscans TO off", 
        "SET statement_timeout = 0", 
        "SET lock_timeout = 0", 
        "SET quote_all_identifiers = true", 
        "SET TRANSACTION ISOLATION LEVEL SERIALIZABLE, READ ONLY, DEFERRABLE", 
        "SET TRANSACTION ISOLATION LEVEL REPEATABLE READ, READ ONLY", 
        "SET TRANSACTION ISOLATION LEVEL SERIALIZABLE READ ONLY", 
        "SET TRANSACTION ISOLATION LEVEL SERIALIZABLE", 
        "SET TRANSACTION SNAPSHOT ", 
        "SELECT pg_catalog.pg_export_snapshot()", 
        "append", 
        "custom", 
        "directory", 
        "invalid output format \"%s\" specified", 
        "server version must be at least 7.3 to use schema selection switches", 
        "UNION ALL", 
        "SELECT oid FROM pg_catalog.pg_namespace n", 
        "n.nspname", 
        "SELECT c.oid", 
        "FROM pg_catalog.pg_class c", 
        "     LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace", 
        "WHERE c.relkind in ('%c', '%c', '%c', '%c', '%c')", 
        "pg_catalog.pg_table_is_visible(c.oid)", 
        "c.relname", 
        "information_schema", 
        "dumping contents of table %s", 
        "COPY %s %s WITH OIDS TO stdout;", 
        "COPY (SELECT ", 
        "FROM %s %s) TO stdout;", 
        "COPY %s %s TO stdout;", 
        "Dumping the contents of table \"%s\" failed: PQgetCopyData() failed.", 
        "Error message from server: %s", 
        "The command was: %s", 
        "Dumping the contents of table \"%s\" failed: PQgetResult() failed.", 
        "DECLARE _pg_dump_cursor CURSOR FOR SELECT * FROM ONLY %s", 
        "DECLARE _pg_dump_cursor CURSOR FOR SELECT * FROM %s", 
        "FETCH 100 FROM _pg_dump_cursor", 
        "INSERT INTO %s ", 
        "DEFAULT VALUES;", 
        "VALUES (", 
        "0123456789 +-eE.", 
        "CLOSE _pg_dump_cursor", 
        "COPY %s ", 
        "WITH OIDS ", 
        "%s %sFROM stdin;", 
        "REFRESH MATERIALIZED VIEW %s;", 
        "WITH RECURSIVE w AS ( SELECT d1.objid, d2.refobjid, c2.relkind AS refrelkind FROM pg_depend d1 JOIN pg_class c1 ON c1.oid = d1.objid AND c1.relkind = 'm' JOIN pg_rewrite r1 ON r1.ev_class = d1.objid JOIN pg_depend d2 ON d2.classid = 'pg_rewrite'::regclass AND d2.objid = r1.oid AND d2.refobjid <> d1.objid JOIN pg_class c2 ON c2.oid = d2.refobjid AND c2.relkind IN ('m','v') WHERE d1.classid = 'pg_class'::regclass UNION SELECT w.objid, d3.refobjid, c3.relkind FROM w JOIN pg_rewrite r3 ON r3.ev_class = w.refobjid JOIN pg_depend d3 ON d3.classid = 'pg_rewrite'::regclass AND d3.objid = r3.oid AND d3.refobjid <> w.refobjid JOIN pg_class c3 ON c3.oid = d3.refobjid AND c3.relkind IN ('m','v') ) SELECT 'pg_class'::regclass::oid AS classid, objid, refobjid FROM w WHERE refrelkind = 'm'", 
        "classid", 
        "refobjid", 
        "saving database definition", 
        "SELECT tableoid, oid, (%s datdba) AS dba, pg_encoding_to_char(encoding) AS encoding, datcollate, datctype, datfrozenxid, datminmxid, (SELECT spcname FROM pg_tablespace t WHERE t.oid = dattablespace) AS tablespace, shobj_description(oid, 'pg_database') AS description FROM pg_database WHERE datname = ", 
        "SELECT tableoid, oid, (%s datdba) AS dba, pg_encoding_to_char(encoding) AS encoding, datcollate, datctype, datfrozenxid, 0 AS datminmxid, (SELECT spcname FROM pg_tablespace t WHERE t.oid = dattablespace) AS tablespace, shobj_description(oid, 'pg_database') AS description FROM pg_database WHERE datname = ", 
        "SELECT tableoid, oid, (%s datdba) AS dba, pg_encoding_to_char(encoding) AS encoding, NULL AS datcollate, NULL AS datctype, datfrozenxid, 0 AS datminmxid, (SELECT spcname FROM pg_tablespace t WHERE t.oid = dattablespace) AS tablespace, shobj_description(oid, 'pg_database') AS description FROM pg_database WHERE datname = ", 
        "SELECT tableoid, oid, (%s datdba) AS dba, pg_encoding_to_char(encoding) AS encoding, NULL AS datcollate, NULL AS datctype, datfrozenxid, 0 AS datminmxid, (SELECT spcname FROM pg_tablespace t WHERE t.oid = dattablespace) AS tablespace FROM pg_database WHERE datname = ", 
        "SELECT tableoid, oid, (%s datdba) AS dba, pg_encoding_to_char(encoding) AS encoding, NULL AS datcollate, NULL AS datctype, 0 AS datfrozenxid, 0 AS datminmxid, NULL AS tablespace FROM pg_database WHERE datname = ", 
        "SELECT (SELECT oid FROM pg_class WHERE relname = 'pg_database') AS tableoid, oid, (%s datdba) AS dba, pg_encoding_to_char(encoding) AS encoding, NULL AS datcollate, NULL AS datctype, 0 AS datfrozenxid, 0 AS datminmxid, NULL AS tablespace FROM pg_database WHERE datname = ", 
        "tableoid", 
        "datcollate", 
        "datctype", 
        "datfrozenxid", 
        "datminmxid", 
        "CREATE DATABASE %s WITH TEMPLATE = template0", 
        " ENCODING = ", 
        " LC_COLLATE = ", 
        " LC_CTYPE = ", 
        "pg_default", 
        " TABLESPACE = %s", 
        "-- For binary upgrade, set datfrozenxid and datminmxid.", 
        "UPDATE pg_catalog.pg_database", 
        "SET datfrozenxid = '%u', datminmxid = '%u'", 
        "datname = ", 
        "DROP DATABASE %s;", 
        "SELECT relfrozenxid, relminmxid", 
        "FROM pg_catalog.pg_class", 
        "WHERE oid = %u;", 
        "SELECT relfrozenxid, 0 AS relminmxid", 
        "FROM pg_catalog.pg_class", 
        "WHERE oid = %u;", 
        "relfrozenxid", 
        "relminmxid", 
        "-- For binary upgrade, set pg_largeobject relfrozenxid and relminmxid", 
        "UPDATE pg_catalog.pg_class", 
        "SET relfrozenxid = '%u', relminmxid = '%u'", 
        "WHERE oid = %u;", 
        "pg_largeobject", 
        "-- For binary upgrade, set pg_largeobject_metadata relfrozenxid and relminmxid", 
        "pg_largeobject_metadata", 
        "description", 
        "COMMENT ON DATABASE %s IS ", 
        "DATABASE %s", 
        "pg_database", 
        "saving encoding = %s", 
        "SET client_encoding = ", 
        "saving standard_conforming_strings = %s", 
        "SET standard_conforming_strings = '%s';", 
        "reading large objects", 
        "SELECT oid, (%s lomowner) AS rolname, lomacl FROM pg_largeobject_metadata", 
        "SELECT DISTINCT loid, NULL::oid, NULL::oid FROM pg_largeobject", 
        "SELECT oid, NULL::oid, NULL::oid FROM pg_class WHERE relkind = 'l'", 
        "SELECT pg_catalog.lo_create('%s');", 
        "SELECT pg_catalog.lo_unlink('%s');", 
        "saving large objects", 
        "DECLARE bloboid CURSOR FOR SELECT oid FROM pg_largeobject_metadata", 
        "DECLARE bloboid CURSOR FOR SELECT DISTINCT loid FROM pg_largeobject", 
        "DECLARE bloboid CURSOR FOR SELECT oid FROM pg_class WHERE relkind = 'l'", 
        "FETCH 1000 IN bloboid", 
        "error reading large object %u: %s", 
        "-- For binary upgrade, must preserve pg_type oid", 
        "SELECT binary_upgrade.set_next_pg_type_oid('%u'::pg_catalog.oid);", 
        "SELECT typarray FROM pg_catalog.pg_type WHERE pg_type.oid = '%u'::pg_catalog.oid;", 
        "typarray", 
        "-- For binary upgrade, must preserve pg_type array oid", 
        "SELECT binary_upgrade.set_next_array_pg_type_oid('%u'::pg_catalog.oid);", 
        "SELECT c.reltype AS crel, t.reltype AS trel FROM pg_catalog.pg_class c LEFT JOIN pg_catalog.pg_class t ON   (c.reltoastrelid = t.oid) WHERE c.oid = '%u'::pg_catalog.oid;", 
        "-- For binary upgrade, must preserve pg_type toast oid", 
        "SELECT binary_upgrade.set_next_toast_pg_type_oid('%u'::pg_catalog.oid);", 
        "SELECT c.reltoastrelid, i.indexrelid FROM pg_catalog.pg_class c LEFT JOIN pg_catalog.pg_index i ON (c.reltoastrelid = i.indrelid AND i.indisvalid) WHERE c.oid = '%u'::pg_catalog.oid;", 
        "reltoastrelid", 
        "indexrelid", 
        "-- For binary upgrade, must preserve pg_class oids", 
        "SELECT binary_upgrade.set_next_heap_pg_class_oid('%u'::pg_catalog.oid);", 
        "SELECT binary_upgrade.set_next_toast_pg_class_oid('%u'::pg_catalog.oid);", 
        "SELECT binary_upgrade.set_next_index_pg_class_oid('%u'::pg_catalog.oid);", 
        "could not find parent extension for %s", 
        "-- For binary upgrade, handle extension membership the hard way", 
        "ALTER EXTENSION %s ADD %s;", 
        "SELECT tableoid, oid, nspname, (%s nspowner) AS rolname, nspacl FROM pg_namespace", 
        "nspname", 
        "rolname", 
        "nspacl", 
        "WARNING: owner of schema \"%s\" appears to be invalid", 
        "schema with OID %u does not exist", 
        "SELECT x.tableoid, x.oid, x.extname, n.nspname, x.extrelocatable, x.extversion, x.extconfig, x.extcondition FROM pg_extension x JOIN pg_namespace n ON n.oid = x.extnamespace", 
        "extname", 
        "extrelocatable", 
        "extversion", 
        "extconfig", 
        "extcondition", 
        "SELECT tableoid, oid, typname, typnamespace, typacl, (%s typowner) AS rolname, typinput::oid AS typinput, typoutput::oid AS typoutput, typelem, typrelid, CASE WHEN typrelid = 0 THEN ' '::\"char\" ELSE (SELECT relkind FROM pg_class WHERE oid = typrelid) END AS typrelkind, typtype, typisdefined, typname[0] = '_' AND typelem != 0 AND (SELECT typarray FROM pg_type te WHERE oid = pg_type.typelem) = oid AS isarray FROM pg_type", 
        "SELECT tableoid, oid, typname, typnamespace, NULL AS typacl, (%s typowner) AS rolname, typinput::oid AS typinput, typoutput::oid AS typoutput, typelem, typrelid, CASE WHEN typrelid = 0 THEN ' '::\"char\" ELSE (SELECT relkind FROM pg_class WHERE oid = typrelid) END AS typrelkind, typtype, typisdefined, typname[0] = '_' AND typelem != 0 AND (SELECT typarray FROM pg_type te WHERE oid = pg_type.typelem) = oid AS isarray FROM pg_type", 
        "SELECT tableoid, oid, typname, typnamespace, NULL AS typacl, (%s typowner) AS rolname, typinput::oid AS typinput, typoutput::oid AS typoutput, typelem, typrelid, CASE WHEN typrelid = 0 THEN ' '::\"char\" ELSE (SELECT relkind FROM pg_class WHERE oid = typrelid) END AS typrelkind, typtype, typisdefined, typname[0] = '_' AND typelem != 0 AS isarray FROM pg_type", 
        "SELECT tableoid, oid, typname, 0::oid AS typnamespace, NULL AS typacl, (%s typowner) AS rolname, typinput::oid AS typinput, typoutput::oid AS typoutput, typelem, typrelid, CASE WHEN typrelid = 0 THEN ' '::\"char\" ELSE (SELECT relkind FROM pg_class WHERE oid = typrelid) END AS typrelkind, typtype, typisdefined, typname[0] = '_' AND typelem != 0 AS isarray FROM pg_type", 
        "SELECT (SELECT oid FROM pg_class WHERE relname = 'pg_type') AS tableoid, oid, typname, 0::oid AS typnamespace, NULL AS typacl, (%s typowner) AS rolname, typinput::oid AS typinput, typoutput::oid AS typoutput, typelem, typrelid, CASE WHEN typrelid = 0 THEN ' '::\"char\" ELSE (SELECT relkind FROM pg_class WHERE oid = typrelid) END AS typrelkind, typtype, typisdefined, typname[0] = '_' AND typelem != 0 AS isarray FROM pg_type", 
        "typname", 
        "typnamespace", 
        "typacl", 
        "typinput", 
        "typoutput", 
        "typelem", 
        "typrelid", 
        "typrelkind", 
        "typtype", 
        "typisdefined", 
        "isarray", 
        "WARNING: owner of data type \"%s\" appears to be invalid", 
        "SELECT tableoid, oid, oprname, oprnamespace, (%s oprowner) AS rolname, oprkind, oprcode::oid AS oprcode FROM pg_operator", 
        "SELECT tableoid, oid, oprname, 0::oid AS oprnamespace, (%s oprowner) AS rolname, oprkind, oprcode::oid AS oprcode FROM pg_operator", 
        "SELECT (SELECT oid FROM pg_class WHERE relname = 'pg_operator') AS tableoid, oid, oprname, 0::oid AS oprnamespace, (%s oprowner) AS rolname, oprkind, oprcode::oid AS oprcode FROM pg_operator", 
        "oprname", 
        "oprnamespace", 
        "oprkind", 
        "oprcode", 
        "WARNING: owner of operator \"%s\" appears to be invalid", 
        "SELECT tableoid, oid, collname, collnamespace, (%s collowner) AS rolname FROM pg_collation", 
        "collname", 
        "collnamespace", 
        "SELECT tableoid, oid, conname, connamespace, (%s conowner) AS rolname FROM pg_conversion", 
        "conname", 
        "connamespace", 
        "SELECT tableoid, oid, opcname, opcnamespace, (%s opcowner) AS rolname FROM pg_opclass", 
        "SELECT tableoid, oid, opcname, 0::oid AS opcnamespace, ''::name AS rolname FROM pg_opclass", 
        "SELECT (SELECT oid FROM pg_class WHERE relname = 'pg_opclass') AS tableoid, oid, opcname, 0::oid AS opcnamespace, ''::name AS rolname FROM pg_opclass", 
        "opcname", 
        "opcnamespace", 
        "WARNING: owner of operator class \"%s\" appears to be invalid", 
        "SELECT tableoid, oid, opfname, opfnamespace, (%s opfowner) AS rolname FROM pg_opfamily", 
        "opfname", 
        "opfnamespace", 
        "WARNING: owner of operator family \"%s\" appears to be invalid", 
        "SELECT tableoid, oid, proname AS aggname, pronamespace AS aggnamespace, pronargs, proargtypes, (%s proowner) AS rolname, proacl AS aggacl FROM pg_proc p WHERE proisagg AND (pronamespace != (SELECT oid FROM pg_namespace WHERE nspname = 'pg_catalog')", 
        " OR EXISTS(SELECT 1 FROM pg_depend WHERE classid = 'pg_proc'::regclass AND objid = p.oid AND refclassid = 'pg_extension'::regclass AND deptype = 'e')", 
        "SELECT tableoid, oid, proname AS aggname, pronamespace AS aggnamespace, CASE WHEN proargtypes[0] = 'pg_catalog.\"any\"'::pg_catalog.regtype THEN 0 ELSE 1 END AS pronargs, proargtypes, (%s proowner) AS rolname, proacl AS aggacl FROM pg_proc WHERE proisagg AND pronamespace != (SELECT oid FROM pg_namespace WHERE nspname = 'pg_catalog')", 
        "SELECT tableoid, oid, aggname, 0::oid AS aggnamespace, CASE WHEN aggbasetype = 0 THEN 0 ELSE 1 END AS pronargs, aggbasetype AS proargtypes, (%s aggowner) AS rolname, NULL AS aggacl FROM pg_aggregate where oid > '%u'::oid", 
        "SELECT (SELECT oid FROM pg_class WHERE relname = 'pg_aggregate') AS tableoid, oid, aggname, 0::oid AS aggnamespace, CASE WHEN aggbasetype = 0 THEN 0 ELSE 1 END AS pronargs, aggbasetype AS proargtypes, (%s aggowner) AS rolname, NULL AS aggacl FROM pg_aggregate where oid > '%u'::oid", 
        "aggname", 
        "aggnamespace", 
        "pronargs", 
        "proargtypes", 
        "aggacl", 
        "WARNING: owner of aggregate function \"%s\" appears to be invalid", 
        "SELECT tableoid, oid, proname, prolang, pronargs, proargtypes, prorettype, proacl, pronamespace, (%s proowner) AS rolname FROM pg_proc p WHERE NOT proisagg", 
        "  AND NOT EXISTS (SELECT 1 FROM pg_depend WHERE classid = 'pg_proc'::regclass AND objid = p.oid AND deptype = 'i')", 
        "  AND (", 
        "  pronamespace != (SELECT oid FROM pg_namespace WHERE nspname = 'pg_catalog')", 
        "  OR EXISTS (SELECT 1 FROM pg_cast", 
        "  WHERE pg_cast.oid > '%u'::oid", 
        "  AND p.oid = pg_cast.castfunc)", 
        "  OR EXISTS(SELECT 1 FROM pg_depend WHERE classid = 'pg_proc'::regclass AND objid = p.oid AND refclassid = 'pg_extension'::regclass AND deptype = 'e')", 
        "SELECT tableoid, oid, proname, prolang, pronargs, proargtypes, prorettype, NULL AS proacl, 0::oid AS pronamespace, (%s proowner) AS rolname FROM pg_proc WHERE pg_proc.oid > '%u'::oid", 
        "SELECT (SELECT oid FROM pg_class  WHERE relname = 'pg_proc') AS tableoid, oid, proname, prolang, pronargs, proargtypes, prorettype, NULL AS proacl, 0::oid AS pronamespace, (%s proowner) AS rolname FROM pg_proc where pg_proc.oid > '%u'::oid", 
        "proname", 
        "pronamespace", 
        "prolang", 
        "prorettype", 
        "proacl", 
        "WARNING: owner of function \"%s\" appears to be invalid", 
        "SELECT c.tableoid, c.oid, c.relname, c.relacl, c.relkind, c.relnamespace, (%s c.relowner) AS rolname, c.relchecks, c.relhastriggers, c.relhasindex, c.relhasrules, c.relhasoids, c.relfrozenxid, c.relminmxid, tc.oid AS toid, tc.relfrozenxid AS tfrozenxid, tc.relminmxid AS tminmxid, c.relpersistence, c.relispopulated, c.relreplident, c.relpages, CASE WHEN c.reloftype <> 0 THEN c.reloftype::pg_catalog.regtype ELSE NULL END AS reloftype, d.refobjid AS owning_tab, d.refobjsubid AS owning_col, (SELECT spcname FROM pg_tablespace t WHERE t.oid = c.reltablespace) AS reltablespace, array_remove(array_remove(c.reloptions,'check_option=local'),'check_option=cascaded') AS reloptions, CASE WHEN 'check_option=local' = ANY (c.reloptions) THEN 'LOCAL'::text WHEN 'check_option=cascaded' = ANY (c.reloptions) THEN 'CASCADED'::text ELSE NULL END AS checkoption, tc.reloptions AS toast_reloptions FROM pg_class c LEFT JOIN pg_depend d ON (c.relkind = '%c' AND d.classid = c.tableoid AND d.objid = c.oid AND d.objsubid = 0 AND d.refclas", 
        "SELECT c.tableoid, c.oid, c.relname, c.relacl, c.relkind, c.relnamespace, (%s c.relowner) AS rolname, c.relchecks, c.relhastriggers, c.relhasindex, c.relhasrules, c.relhasoids, c.relfrozenxid, c.relminmxid, tc.oid AS toid, tc.relfrozenxid AS tfrozenxid, tc.relminmxid AS tminmxid, c.relpersistence, c.relispopulated, 'd' AS relreplident, c.relpages, CASE WHEN c.reloftype <> 0 THEN c.reloftype::pg_catalog.regtype ELSE NULL END AS reloftype, d.refobjid AS owning_tab, d.refobjsubid AS owning_col, (SELECT spcname FROM pg_tablespace t WHERE t.oid = c.reltablespace) AS reltablespace, array_remove(array_remove(c.reloptions,'check_option=local'),'check_option=cascaded') AS reloptions, CASE WHEN 'check_option=local' = ANY (c.reloptions) THEN 'LOCAL'::text WHEN 'check_option=cascaded' = ANY (c.reloptions) THEN 'CASCADED'::text ELSE NULL END AS checkoption, tc.reloptions AS toast_reloptions FROM pg_class c LEFT JOIN pg_depend d ON (c.relkind = '%c' AND d.classid = c.tableoid AND d.objid = c.oid AND d.objsubid = 0 AND d.re", 
        "SELECT c.tableoid, c.oid, c.relname, c.relacl, c.relkind, c.relnamespace, (%s c.relowner) AS rolname, c.relchecks, c.relhastriggers, c.relhasindex, c.relhasrules, c.relhasoids, c.relfrozenxid, 0 AS relminmxid, tc.oid AS toid, tc.relfrozenxid AS tfrozenxid, 0 AS tminmxid, c.relpersistence, 't' as relispopulated, 'd' AS relreplident, c.relpages, CASE WHEN c.reloftype <> 0 THEN c.reloftype::pg_catalog.regtype ELSE NULL END AS reloftype, d.refobjid AS owning_tab, d.refobjsubid AS owning_col, (SELECT spcname FROM pg_tablespace t WHERE t.oid = c.reltablespace) AS reltablespace, c.reloptions AS reloptions, tc.reloptions AS toast_reloptions FROM pg_class c LEFT JOIN pg_depend d ON (c.relkind = '%c' AND d.classid = c.tableoid AND d.objid = c.oid AND d.objsubid = 0 AND d.refclassid = c.tableoid AND d.deptype = 'a') LEFT JOIN pg_class tc ON (c.reltoastrelid = tc.oid) WHERE c.relkind in ('%c', '%c', '%c', '%c', '%c', '%c') ORDER BY c.oid", 
        "SELECT c.tableoid, c.oid, c.relname, c.relacl, c.relkind, c.relnamespace, (%s c.relowner) AS rolname, c.relchecks, c.relhastriggers, c.relhasindex, c.relhasrules, c.relhasoids, c.relfrozenxid, 0 AS relminmxid, tc.oid AS toid, tc.relfrozenxid AS tfrozenxid, 0 AS tminmxid, 'p' AS relpersistence, 't' as relispopulated, 'd' AS relreplident, c.relpages, CASE WHEN c.reloftype <> 0 THEN c.reloftype::pg_catalog.regtype ELSE NULL END AS reloftype, d.refobjid AS owning_tab, d.refobjsubid AS owning_col, (SELECT spcname FROM pg_tablespace t WHERE t.oid = c.reltablespace) AS reltablespace, c.reloptions AS reloptions, tc.reloptions AS toast_reloptions FROM pg_class c LEFT JOIN pg_depend d ON (c.relkind = '%c' AND d.classid = c.tableoid AND d.objid = c.oid AND d.objsubid = 0 AND d.refclassid = c.tableoid AND d.deptype = 'a') LEFT JOIN pg_class tc ON (c.reltoastrelid = tc.oid) WHERE c.relkind in ('%c', '%c', '%c', '%c') ORDER BY c.oid", 
        "SELECT c.tableoid, c.oid, c.relname, c.relacl, c.relkind, c.relnamespace, (%s c.relowner) AS rolname, c.relchecks, c.relhastriggers, c.relhasindex, c.relhasrules, c.relhasoids, c.relfrozenxid, 0 AS relminmxid, tc.oid AS toid, tc.relfrozenxid AS tfrozenxid, 0 AS tminmxid, 'p' AS relpersistence, 't' as relispopulated, 'd' AS relreplident, c.relpages, NULL AS reloftype, d.refobjid AS owning_tab, d.refobjsubid AS owning_col, (SELECT spcname FROM pg_tablespace t WHERE t.oid = c.reltablespace) AS reltablespace, c.reloptions AS reloptions, tc.reloptions AS toast_reloptions FROM pg_class c LEFT JOIN pg_depend d ON (c.relkind = '%c' AND d.classid = c.tableoid AND d.objid = c.oid AND d.objsubid = 0 AND d.refclassid = c.tableoid AND d.deptype = 'a') LEFT JOIN pg_class tc ON (c.reltoastrelid = tc.oid) WHERE c.relkind in ('%c', '%c', '%c', '%c') ORDER BY c.oid", 
        "SELECT c.tableoid, c.oid, c.relname, c.relacl, c.relkind, c.relnamespace, (%s c.relowner) AS rolname, c.relchecks, (c.reltriggers <> 0) AS relhastriggers, c.relhasindex, c.relhasrules, c.relhasoids, c.relfrozenxid, 0 AS relminmxid, tc.oid AS toid, tc.relfrozenxid AS tfrozenxid, 0 AS tminmxid, 'p' AS relpersistence, 't' as relispopulated, 'd' AS relreplident, c.relpages, NULL AS reloftype, d.refobjid AS owning_tab, d.refobjsubid AS owning_col, (SELECT spcname FROM pg_tablespace t WHERE t.oid = c.reltablespace) AS reltablespace, c.reloptions AS reloptions, NULL AS toast_reloptions FROM pg_class c LEFT JOIN pg_depend d ON (c.relkind = '%c' AND d.classid = c.tableoid AND d.objid = c.oid AND d.objsubid = 0 AND d.refclassid = c.tableoid AND d.deptype = 'a') LEFT JOIN pg_class tc ON (c.reltoastrelid = tc.oid) WHERE c.relkind in ('%c', '%c', '%c', '%c') ORDER BY c.oid", 
        "SELECT c.tableoid, c.oid, relname, relacl, relkind, relnamespace, (%s relowner) AS rolname, relchecks, (reltriggers <> 0) AS relhastriggers, relhasindex, relhasrules, relhasoids, 0 AS relfrozenxid, 0 AS relminmxid,0 AS toid, 0 AS tfrozenxid, 0 AS tminmxid,'p' AS relpersistence, 't' as relispopulated, 'd' AS relreplident, relpages, NULL AS reloftype, d.refobjid AS owning_tab, d.refobjsubid AS owning_col, (SELECT spcname FROM pg_tablespace t WHERE t.oid = c.reltablespace) AS reltablespace, NULL AS reloptions, NULL AS toast_reloptions FROM pg_class c LEFT JOIN pg_depend d ON (c.relkind = '%c' AND d.classid = c.tableoid AND d.objid = c.oid AND d.objsubid = 0 AND d.refclassid = c.tableoid AND d.deptype = 'i') WHERE relkind in ('%c', '%c', '%c', '%c') ORDER BY c.oid", 
        "SELECT c.tableoid, c.oid, relname, relacl, relkind, relnamespace, (%s relowner) AS rolname, relchecks, (reltriggers <> 0) AS relhastriggers, relhasindex, relhasrules, relhasoids, 0 AS relfrozenxid, 0 AS relminmxid,0 AS toid, 0 AS tfrozenxid, 0 AS tminmxid,'p' AS relpersistence, 't' as relispopulated, 'd' AS relreplident, relpages, NULL AS reloftype, d.refobjid AS owning_tab, d.refobjsubid AS owning_col, NULL AS reltablespace, NULL AS reloptions, NULL AS toast_reloptions FROM pg_class c LEFT JOIN pg_depend d ON (c.relkind = '%c' AND d.classid = c.tableoid AND d.objid = c.oid AND d.objsubid = 0 AND d.refclassid = c.tableoid AND d.deptype = 'i') WHERE relkind IN ('%c', '%c', '%c', '%c') ORDER BY c.oid", 
        "SELECT tableoid, oid, relname, relacl, relkind, 0::oid AS relnamespace, (%s relowner) AS rolname, relchecks, (reltriggers <> 0) AS relhastriggers, relhasindex, relhasrules, relhasoids, 0 AS relfrozenxid, 0 AS relminmxid,0 AS toid, 0 AS tfrozenxid, 0 AS tminmxid,'p' AS relpersistence, 't' as relispopulated, 'd' AS relreplident, relpages, NULL AS reloftype, NULL::oid AS owning_tab, NULL::int4 AS owning_col, NULL AS reltablespace, NULL AS reloptions, NULL AS toast_reloptions FROM pg_class WHERE relkind IN ('%c', '%c', '%c') ORDER BY oid", 
        "SELECT tableoid, oid, relname, relacl, relkind, 0::oid AS relnamespace, (%s relowner) AS rolname, relchecks, (reltriggers <> 0) AS relhastriggers, relhasindex, relhasrules, 't'::bool AS relhasoids, 0 AS relfrozenxid, 0 AS relminmxid,0 AS toid, 0 AS tfrozenxid, 0 AS tminmxid,'p' AS relpersistence, 't' as relispopulated, 'd' AS relreplident, relpages, NULL AS reloftype, NULL::oid AS owning_tab, NULL::int4 AS owning_col, NULL AS reltablespace, NULL AS reloptions, NULL AS toast_reloptions FROM pg_class WHERE relkind IN ('%c', '%c', '%c') ORDER BY oid", 
        "SELECT (SELECT oid FROM pg_class WHERE relname = 'pg_class') AS tableoid, oid, relname, relacl, CASE WHEN relhasrules and relkind = 'r'   and EXISTS(SELECT rulename FROM pg_rewrite r WHERE              r.ev_class = c.oid AND r.ev_type = '1') THEN '%c'::\"char\" ELSE relkind END AS relkind,0::oid AS relnamespace, (%s relowner) AS rolname, relchecks, (reltriggers <> 0) AS relhastriggers, relhasindex, relhasrules, 't'::bool AS relhasoids, 0 AS relfrozenxid, 0 AS relminmxid,0 AS toid, 0 AS tfrozenxid, 0 AS tminmxid,'p' AS relpersistence, 't' as relispopulated, 'd' AS relreplident, 0 AS relpages, NULL AS reloftype, NULL::oid AS owning_tab, NULL::int4 AS owning_col, NULL AS reltablespace, NULL AS reloptions, NULL AS toast_reloptions FROM pg_class c WHERE relkind IN ('%c', '%c') ORDER BY oid", 
        "relname", 
        "relnamespace", 
        "relacl", 
        "relkind", 
        "relchecks", 
        "relhastriggers", 
        "relhasindex", 
        "relhasrules", 
        "relhasoids", 
        "tfrozenxid", 
        "tminmxid", 
        "relpersistence", 
        "relispopulated", 
        "relreplident", 
        "relpages", 
        "owning_tab", 
        "owning_col", 
        "reltablespace", 
        "reloptions", 
        "checkoption", 
        "toast_reloptions", 
        "reloftype", 
        "SET statement_timeout = ", 
        "LOCK TABLE %s IN ACCESS SHARE MODE", 
        "WARNING: owner of table \"%s\" appears to be invalid", 
        "SELECT inhrelid, inhparent FROM pg_inherits", 
        "inhrelid", 
        "inhparent", 
        "reading indexes for table \"%s\"", 
        "SELECT t.tableoid, t.oid, t.relname AS indexname, pg_catalog.pg_get_indexdef(i.indexrelid) AS indexdef, t.relnatts AS indnkeys, i.indkey, i.indisclustered, i.indisreplident, t.relpages, c.contype, c.conname, c.condeferrable, c.condeferred, c.tableoid AS contableoid, c.oid AS conoid, pg_catalog.pg_get_constraintdef(c.oid, false) AS condef, (SELECT spcname FROM pg_catalog.pg_tablespace s WHERE s.oid = t.reltablespace) AS tablespace, t.reloptions AS indreloptions FROM pg_catalog.pg_index i JOIN pg_catalog.pg_class t ON (t.oid = i.indexrelid) LEFT JOIN pg_catalog.pg_constraint c ON (i.indrelid = c.conrelid AND i.indexrelid = c.conindid AND c.contype IN ('p','u','x')) WHERE i.indrelid = '%u'::pg_catalog.oid AND i.indisvalid AND i.indisready ORDER BY indexname", 
        "SELECT t.tableoid, t.oid, t.relname AS indexname, pg_catalog.pg_get_indexdef(i.indexrelid) AS indexdef, t.relnatts AS indnkeys, i.indkey, i.indisclustered, false AS indisreplident, t.relpages, c.contype, c.conname, c.condeferrable, c.condeferred, c.tableoid AS contableoid, c.oid AS conoid, pg_catalog.pg_get_constraintdef(c.oid, false) AS condef, (SELECT spcname FROM pg_catalog.pg_tablespace s WHERE s.oid = t.reltablespace) AS tablespace, t.reloptions AS indreloptions FROM pg_catalog.pg_index i JOIN pg_catalog.pg_class t ON (t.oid = i.indexrelid) LEFT JOIN pg_catalog.pg_constraint c ON (i.indrelid = c.conrelid AND i.indexrelid = c.conindid AND c.contype IN ('p','u','x')) WHERE i.indrelid = '%u'::pg_catalog.oid AND i.indisvalid AND i.indisready ORDER BY indexname", 
        "SELECT t.tableoid, t.oid, t.relname AS indexname, pg_catalog.pg_get_indexdef(i.indexrelid) AS indexdef, t.relnatts AS indnkeys, i.indkey, i.indisclustered, false AS indisreplident, t.relpages, c.contype, c.conname, c.condeferrable, c.condeferred, c.tableoid AS contableoid, c.oid AS conoid, null AS condef, (SELECT spcname FROM pg_catalog.pg_tablespace s WHERE s.oid = t.reltablespace) AS tablespace, t.reloptions AS indreloptions FROM pg_catalog.pg_index i JOIN pg_catalog.pg_class t ON (t.oid = i.indexrelid) LEFT JOIN pg_catalog.pg_depend d ON (d.classid = t.tableoid AND d.objid = t.oid AND d.deptype = 'i') LEFT JOIN pg_catalog.pg_constraint c ON (d.refclassid = c.tableoid AND d.refobjid = c.oid) WHERE i.indrelid = '%u'::pg_catalog.oid AND i.indisvalid ORDER BY indexname", 
        "SELECT t.tableoid, t.oid, t.relname AS indexname, pg_catalog.pg_get_indexdef(i.indexrelid) AS indexdef, t.relnatts AS indnkeys, i.indkey, i.indisclustered, false AS indisreplident, t.relpages, c.contype, c.conname, c.condeferrable, c.condeferred, c.tableoid AS contableoid, c.oid AS conoid, null AS condef, (SELECT spcname FROM pg_catalog.pg_tablespace s WHERE s.oid = t.reltablespace) AS tablespace, null AS indreloptions FROM pg_catalog.pg_index i JOIN pg_catalog.pg_class t ON (t.oid = i.indexrelid) LEFT JOIN pg_catalog.pg_depend d ON (d.classid = t.tableoid AND d.objid = t.oid AND d.deptype = 'i') LEFT JOIN pg_catalog.pg_constraint c ON (d.refclassid = c.tableoid AND d.refobjid = c.oid) WHERE i.indrelid = '%u'::pg_catalog.oid ORDER BY indexname", 
        "SELECT t.tableoid, t.oid, t.relname AS indexname, pg_catalog.pg_get_indexdef(i.indexrelid) AS indexdef, t.relnatts AS indnkeys, i.indkey, i.indisclustered, false AS indisreplident, t.relpages, c.contype, c.conname, c.condeferrable, c.condeferred, c.tableoid AS contableoid, c.oid AS conoid, null AS condef, NULL AS tablespace, null AS indreloptions FROM pg_catalog.pg_index i JOIN pg_catalog.pg_class t ON (t.oid = i.indexrelid) LEFT JOIN pg_catalog.pg_depend d ON (d.classid = t.tableoid AND d.objid = t.oid AND d.deptype = 'i') LEFT JOIN pg_catalog.pg_constraint c ON (d.refclassid = c.tableoid AND d.refobjid = c.oid) WHERE i.indrelid = '%u'::pg_catalog.oid ORDER BY indexname", 
        "SELECT t.tableoid, t.oid, t.relname AS indexname, pg_get_indexdef(i.indexrelid) AS indexdef, t.relnatts AS indnkeys, i.indkey, false AS indisclustered, false AS indisreplident, t.relpages, CASE WHEN i.indisprimary THEN 'p'::char ELSE '0'::char END AS contype, t.relname AS conname, false AS condeferrable, false AS condeferred, 0::oid AS contableoid, t.oid AS conoid, null AS condef, NULL AS tablespace, null AS indreloptions FROM pg_index i, pg_class t WHERE t.oid = i.indexrelid AND i.indrelid = '%u'::oid ORDER BY indexname", 
        "SELECT (SELECT oid FROM pg_class WHERE relname = 'pg_class') AS tableoid, t.oid, t.relname AS indexname, pg_get_indexdef(i.indexrelid) AS indexdef, t.relnatts AS indnkeys, i.indkey, false AS indisclustered, false AS indisreplident, t.relpages, CASE WHEN i.indisprimary THEN 'p'::char ELSE '0'::char END AS contype, t.relname AS conname, false AS condeferrable, false AS condeferred, 0::oid AS contableoid, t.oid AS conoid, null AS condef, NULL AS tablespace, null AS indreloptions FROM pg_index i, pg_class t WHERE t.oid = i.indexrelid AND i.indrelid = '%u'::oid ORDER BY indexname", 
        "indexname", 
        "indexdef", 
        "indnkeys", 
        "indkey", 
        "indisclustered", 
        "indisreplident", 
        "contype", 
        "condeferrable", 
        "condeferred", 
        "contableoid", 
        "conoid", 
        "condef", 
        "indreloptions", 
        "reading foreign key constraints for table \"%s\"", 
        "SELECT tableoid, oid, conname, confrelid, pg_catalog.pg_get_constraintdef(oid) AS condef FROM pg_catalog.pg_constraint WHERE conrelid = '%u'::pg_catalog.oid AND contype = 'f'", 
        "confrelid", 
        "SELECT tableoid, oid, conname, pg_catalog.pg_get_constraintdef(oid) AS consrc, convalidated FROM pg_catalog.pg_constraint WHERE contypid = '%u'::pg_catalog.oid ORDER BY conname", 
        "SELECT tableoid, oid, conname, pg_catalog.pg_get_constraintdef(oid) AS consrc, true as convalidated FROM pg_catalog.pg_constraint WHERE contypid = '%u'::pg_catalog.oid ORDER BY conname", 
        "SELECT tableoid, oid, conname, 'CHECK (' || consrc || ')' AS consrc, true as convalidated FROM pg_catalog.pg_constraint WHERE contypid = '%u'::pg_catalog.oid ORDER BY conname", 
        "consrc", 
        "SELECT tableoid, oid, rulename, ev_class AS ruletable, ev_type, is_instead, ev_enabled FROM pg_rewrite ORDER BY oid", 
        "SELECT tableoid, oid, rulename, ev_class AS ruletable, ev_type, is_instead, 'O'::char AS ev_enabled FROM pg_rewrite ORDER BY oid", 
        "SELECT (SELECT oid FROM pg_class WHERE relname = 'pg_rewrite') AS tableoid, oid, rulename, ev_class AS ruletable, ev_type, is_instead, 'O'::char AS ev_enabled FROM pg_rewrite ORDER BY oid", 
        "rulename", 
        "ruletable", 
        "ev_type", 
        "is_instead", 
        "ev_enabled", 
        "failed sanity check, parent table OID %u of pg_rewrite entry OID %u not found", 
        "reading triggers for table \"%s\"", 
        "SELECT tgname, tgfoid::pg_catalog.regproc AS tgfname, pg_catalog.pg_get_triggerdef(oid, false) AS tgdef, tgenabled, tableoid, oid FROM pg_catalog.pg_trigger t WHERE tgrelid = '%u'::pg_catalog.oid AND NOT tgisinternal", 
        "SELECT tgname, tgfoid::pg_catalog.regproc AS tgfname, tgtype, tgnargs, tgargs, tgenabled, tgisconstraint, tgconstrname, tgdeferrable, tgconstrrelid, tginitdeferred, tableoid, oid, tgconstrrelid::pg_catalog.regclass AS tgconstrrelname FROM pg_catalog.pg_trigger t WHERE tgrelid = '%u'::pg_catalog.oid AND tgconstraint = 0", 
        "SELECT tgname, tgfoid::pg_catalog.regproc AS tgfname, tgtype, tgnargs, tgargs, tgenabled, tgisconstraint, tgconstrname, tgdeferrable, tgconstrrelid, tginitdeferred, tableoid, oid, tgconstrrelid::pg_catalog.regclass AS tgconstrrelname FROM pg_catalog.pg_trigger t WHERE tgrelid = '%u'::pg_catalog.oid AND (NOT tgisconstraint  OR NOT EXISTS  (SELECT 1 FROM pg_catalog.pg_depend d    JOIN pg_catalog.pg_constraint c ON (d.refclassid = c.tableoid AND d.refobjid = c.oid)    WHERE d.classid = t.tableoid AND d.objid = t.oid AND d.deptype = 'i' AND c.contype = 'f'))", 
        "SELECT tgname, tgfoid::regproc AS tgfname, tgtype, tgnargs, tgargs, tgenabled, tgisconstraint, tgconstrname, tgdeferrable, tgconstrrelid, tginitdeferred, tableoid, oid, (SELECT relname FROM pg_class WHERE oid = tgconstrrelid) ", 
        "AS tgconstrrelname FROM pg_trigger WHERE tgrelid = '%u'::oid", 
        "SELECT tgname, tgfoid::regproc AS tgfname, tgtype, tgnargs, tgargs, tgenabled, tgisconstraint, tgconstrname, tgdeferrable, tgconstrrelid, tginitdeferred, (SELECT oid FROM pg_class WHERE relname = 'pg_trigger') AS tableoid, oid, (SELECT relname FROM pg_class WHERE oid = tgconstrrelid) ", 
        "AS tgconstrrelname FROM pg_trigger WHERE tgrelid = '%u'::oid", 
        "tgname", 
        "tgfname", 
        "tgtype", 
        "tgnargs", 
        "tgargs", 
        "tgisconstraint", 
        "tgconstrname", 
        "tgconstrrelid", 
        "tgconstrrelname", 
        "tgenabled", 
        "tgdeferrable", 
        "tginitdeferred", 
        "query produced null referenced table name for foreign key trigger \"%s\" on table \"%s\" (OID of table: %u)", 
        "SELECT e.tableoid, e.oid, evtname, evtenabled, evtevent, (%s evtowner) AS evtowner, array_to_string(array(select quote_literal(x)  from unnest(evttags) as t(x)), ', ') as evttags, e.evtfoid::regproc as evtfname FROM pg_event_trigger e ORDER BY e.oid", 
        "evtname", 
        "evtevent", 
        "evtowner", 
        "evttags", 
        "evtfname", 
        "evtenabled", 
        "SELECT tableoid, oid, lanname, lanpltrusted, lanplcallfoid, laninline, lanvalidator, lanacl, (%s lanowner) AS lanowner FROM pg_language WHERE lanispl ORDER BY oid", 
        "SELECT tableoid, oid, lanname, lanpltrusted, lanplcallfoid, 0 AS laninline, lanvalidator, lanacl, (%s lanowner) AS lanowner FROM pg_language WHERE lanispl ORDER BY oid", 
        "SELECT tableoid, oid, lanname, lanpltrusted, lanplcallfoid, 0 AS laninline, lanvalidator, lanacl, (%s '10') AS lanowner FROM pg_language WHERE lanispl ORDER BY oid", 
        "SELECT tableoid, oid, lanname, lanpltrusted, lanplcallfoid, 0 AS laninline, lanvalidator, lanacl, (%s '1') AS lanowner FROM pg_language WHERE lanispl ORDER BY oid", 
        "SELECT tableoid, oid, lanname, lanpltrusted, lanplcallfoid, 0 AS laninline, lanvalidator, lanacl, NULL AS lanowner FROM pg_language WHERE lanispl ORDER BY oid", 
        "SELECT tableoid, oid, lanname, lanpltrusted, lanplcallfoid, 0 AS laninline, 0 AS lanvalidator, NULL AS lanacl, NULL AS lanowner FROM pg_language WHERE lanispl ORDER BY oid", 
        "SELECT (SELECT oid FROM pg_class WHERE relname = 'pg_language') AS tableoid, oid, lanname, lanpltrusted, lanplcallfoid, 0 AS laninline, 0 AS lanvalidator, NULL AS lanacl, NULL AS lanowner FROM pg_language WHERE lanispl ORDER BY oid", 
        "lanname", 
        "lanpltrusted", 
        "lanplcallfoid", 
        "laninline", 
        "lanvalidator", 
        "lanacl", 
        "lanowner", 
        "SELECT tableoid, oid, castsource, casttarget, castfunc, castcontext, castmethod FROM pg_cast ORDER BY 3,4", 
        "SELECT tableoid, oid, castsource, casttarget, castfunc, castcontext, CASE WHEN castfunc = 0 THEN 'b' ELSE 'f' END AS castmethod FROM pg_cast ORDER BY 3,4", 
        "SELECT 0 AS tableoid, p.oid, t1.oid AS castsource, t2.oid AS casttarget, p.oid AS castfunc, 'e' AS castcontext, 'f' AS castmethod FROM pg_type t1, pg_type t2, pg_proc p WHERE p.pronargs = 1 AND p.proargtypes[0] = t1.oid AND p.prorettype = t2.oid AND p.proname = t2.typname ORDER BY 3,4", 
        "castsource", 
        "casttarget", 
        "castfunc", 
        "castcontext", 
        "castmethod", 
        "finding the columns and types of table \"%s\"", 
        "SELECT a.attnum, a.attname, a.atttypmod, a.attstattarget, a.attstorage, t.typstorage, a.attnotnull, a.atthasdef, a.attisdropped, a.attlen, a.attalign, a.attislocal, pg_catalog.format_type(t.oid,a.atttypmod) AS atttypname, array_to_string(a.attoptions, ', ') AS attoptions, CASE WHEN a.attcollation <> t.typcollation THEN a.attcollation ELSE 0 END AS attcollation, pg_catalog.array_to_string(ARRAY(SELECT pg_catalog.quote_ident(option_name) || ' ' || pg_catalog.quote_literal(option_value) FROM pg_catalog.pg_options_to_table(attfdwoptions) ORDER BY option_name), E',", 
        "    ') AS attfdwoptions FROM pg_catalog.pg_attribute a LEFT JOIN pg_catalog.pg_type t ON a.atttypid = t.oid WHERE a.attrelid = '%u'::pg_catalog.oid AND a.attnum > 0::pg_catalog.int2 ORDER BY a.attrelid, a.attnum", 
        "SELECT a.attnum, a.attname, a.atttypmod, a.attstattarget, a.attstorage, t.typstorage, a.attnotnull, a.atthasdef, a.attisdropped, a.attlen, a.attalign, a.attislocal, pg_catalog.format_type(t.oid,a.atttypmod) AS atttypname, array_to_string(a.attoptions, ', ') AS attoptions, CASE WHEN a.attcollation <> t.typcollation THEN a.attcollation ELSE 0 END AS attcollation, NULL AS attfdwoptions FROM pg_catalog.pg_attribute a LEFT JOIN pg_catalog.pg_type t ON a.atttypid = t.oid WHERE a.attrelid = '%u'::pg_catalog.oid AND a.attnum > 0::pg_catalog.int2 ORDER BY a.attrelid, a.attnum", 
        "SELECT a.attnum, a.attname, a.atttypmod, a.attstattarget, a.attstorage, t.typstorage, a.attnotnull, a.atthasdef, a.attisdropped, a.attlen, a.attalign, a.attislocal, pg_catalog.format_type(t.oid,a.atttypmod) AS atttypname, array_to_string(a.attoptions, ', ') AS attoptions, 0 AS attcollation, NULL AS attfdwoptions FROM pg_catalog.pg_attribute a LEFT JOIN pg_catalog.pg_type t ON a.atttypid = t.oid WHERE a.attrelid = '%u'::pg_catalog.oid AND a.attnum > 0::pg_catalog.int2 ORDER BY a.attrelid, a.attnum", 
        "SELECT a.attnum, a.attname, a.atttypmod, a.attstattarget, a.attstorage, t.typstorage, a.attnotnull, a.atthasdef, a.attisdropped, a.attlen, a.attalign, a.attislocal, pg_catalog.format_type(t.oid,a.atttypmod) AS atttypname, '' AS attoptions, 0 AS attcollation, NULL AS attfdwoptions FROM pg_catalog.pg_attribute a LEFT JOIN pg_catalog.pg_type t ON a.atttypid = t.oid WHERE a.attrelid = '%u'::pg_catalog.oid AND a.attnum > 0::pg_catalog.int2 ORDER BY a.attrelid, a.attnum", 
        "SELECT a.attnum, a.attname, a.atttypmod, -1 AS attstattarget, a.attstorage, t.typstorage, a.attnotnull, a.atthasdef, false AS attisdropped, a.attlen, a.attalign, true AS attislocal, format_type(t.oid,a.atttypmod) AS atttypname, '' AS attoptions, 0 AS attcollation, NULL AS attfdwoptions FROM pg_attribute a LEFT JOIN pg_type t ON a.atttypid = t.oid WHERE a.attrelid = '%u'::oid AND a.attnum > 0::int2 ORDER BY a.attrelid, a.attnum", 
        "SELECT attnum, attname, atttypmod, -1 AS attstattarget, attstorage, attstorage AS typstorage, attnotnull, atthasdef, false AS attisdropped, attlen, attalign, true AS attislocal, (SELECT typname FROM pg_type WHERE oid = atttypid) AS atttypname, '' AS attoptions, 0 AS attcollation, NULL AS attfdwoptions FROM pg_attribute a WHERE attrelid = '%u'::oid AND attnum > 0::int2 ORDER BY attrelid, attnum", 
        "attnum", 
        "attname", 
        "atttypname", 
        "atttypmod", 
        "attstattarget", 
        "attstorage", 
        "typstorage", 
        "attnotnull", 
        "atthasdef", 
        "attisdropped", 
        "attlen", 
        "attalign", 
        "attislocal", 
        "attoptions", 
        "attcollation", 
        "attfdwoptions", 
        "invalid column numbering in table \"%s\"", 
        "finding default expressions of table \"%s\"", 
        "SELECT tableoid, oid, adnum, pg_catalog.pg_get_expr(adbin, adrelid) AS adsrc FROM pg_catalog.pg_attrdef WHERE adrelid = '%u'::pg_catalog.oid", 
        "SELECT tableoid, 0 AS oid, adnum, pg_get_expr(adbin, adrelid) AS adsrc FROM pg_attrdef WHERE adrelid = '%u'::oid", 
        "SELECT tableoid, oid, adnum, adsrc FROM pg_attrdef WHERE adrelid = '%u'::oid", 
        "SELECT (SELECT oid FROM pg_class WHERE relname = 'pg_attrdef') AS tableoid, oid, adnum, adsrc FROM pg_attrdef WHERE adrelid = '%u'::oid", 
        "invalid adnum value %d for table \"%s\"", 
        "finding check constraints for table \"%s\"", 
        "SELECT tableoid, oid, conname, pg_catalog.pg_get_constraintdef(oid) AS consrc, conislocal, convalidated FROM pg_catalog.pg_constraint WHERE conrelid = '%u'::pg_catalog.oid    AND contype = 'c' ORDER BY conname", 
        "SELECT tableoid, oid, conname, pg_catalog.pg_get_constraintdef(oid) AS consrc, conislocal, true AS convalidated FROM pg_catalog.pg_constraint WHERE conrelid = '%u'::pg_catalog.oid    AND contype = 'c' ORDER BY conname", 
        "SELECT tableoid, oid, conname, pg_catalog.pg_get_constraintdef(oid) AS consrc, true AS conislocal, true AS convalidated FROM pg_catalog.pg_constraint WHERE conrelid = '%u'::pg_catalog.oid    AND contype = 'c' ORDER BY conname", 
        "SELECT tableoid, oid, conname, 'CHECK (' || consrc || ')' AS consrc, true AS conislocal, true AS convalidated FROM pg_catalog.pg_constraint WHERE conrelid = '%u'::pg_catalog.oid    AND contype = 'c' ORDER BY conname", 
        "SELECT tableoid, 0 AS oid, rcname AS conname, 'CHECK (' || rcsrc || ')' AS consrc, true AS conislocal, true AS convalidated FROM pg_relcheck WHERE rcrelid = '%u'::oid ORDER BY rcname", 
        "SELECT tableoid, oid, rcname AS conname, 'CHECK (' || rcsrc || ')' AS consrc, true AS conislocal, true AS convalidated FROM pg_relcheck WHERE rcrelid = '%u'::oid ORDER BY rcname", 
        "SELECT (SELECT oid FROM pg_class WHERE relname = 'pg_relcheck') AS tableoid, oid, rcname AS conname, 'CHECK (' || rcsrc || ')' AS consrc, true AS conislocal, true AS convalidated FROM pg_relcheck WHERE rcrelid = '%u'::oid ORDER BY rcname", 
        "expected %d check constraints on table \"%s\" but found %d", 
        "expected %d check constraint on table \"%s\" but found %d", 
        "(The system catalogs might be corrupted.)", 
        "SELECT tableoid, oid, prsname, prsnamespace, prsstart::oid, prstoken::oid, prsend::oid, prsheadline::oid, prslextype::oid FROM pg_ts_parser", 
        "prsname", 
        "prsnamespace", 
        "prsstart", 
        "prstoken", 
        "prsend", 
        "prsheadline", 
        "prslextype", 
        "SELECT tableoid, oid, dictname, dictnamespace, (%s dictowner) AS rolname, dicttemplate, dictinitoption FROM pg_ts_dict", 
        "dictname", 
        "dictnamespace", 
        "dictinitoption", 
        "dicttemplate", 
        "SELECT tableoid, oid, tmplname, tmplnamespace, tmplinit::oid, tmpllexize::oid FROM pg_ts_template", 
        "tmplname", 
        "tmplnamespace", 
        "tmplinit", 
        "tmpllexize", 
        "SELECT tableoid, oid, cfgname, cfgnamespace, (%s cfgowner) AS rolname, cfgparser FROM pg_ts_config", 
        "cfgname", 
        "cfgnamespace", 
        "cfgparser", 
        "SELECT tableoid, oid, fdwname, (%s fdwowner) AS rolname, fdwhandler::pg_catalog.regproc, fdwvalidator::pg_catalog.regproc, fdwacl, array_to_string(ARRAY(SELECT quote_ident(option_name) || ' ' || quote_literal(option_value) FROM pg_options_to_table(fdwoptions) ORDER BY option_name), E',", 
        "    ') AS fdwoptions FROM pg_foreign_data_wrapper", 
        "SELECT tableoid, oid, fdwname, (%s fdwowner) AS rolname, '-' AS fdwhandler, fdwvalidator::pg_catalog.regproc, fdwacl, array_to_string(ARRAY(SELECT quote_ident(option_name) || ' ' || quote_literal(option_value) FROM pg_options_to_table(fdwoptions) ORDER BY option_name), E',", 
        "    ') AS fdwoptions FROM pg_foreign_data_wrapper", 
        "fdwname", 
        "fdwhandler", 
        "fdwvalidator", 
        "fdwacl", 
        "fdwoptions", 
        "SELECT tableoid, oid, srvname, (%s srvowner) AS rolname, srvfdw, srvtype, srvversion, srvacl,array_to_string(ARRAY(SELECT quote_ident(option_name) || ' ' || quote_literal(option_value) FROM pg_options_to_table(srvoptions) ORDER BY option_name), E',", 
        "    ') AS srvoptions FROM pg_foreign_server", 
        "srvname", 
        "srvfdw", 
        "srvtype", 
        "srvversion", 
        "srvacl", 
        "srvoptions", 
        "SELECT oid, tableoid, (%s defaclrole) AS defaclrole, defaclnamespace, defaclobjtype, defaclacl FROM pg_default_acl", 
        "defaclrole", 
        "defaclnamespace", 
        "defaclobjtype", 
        "defaclacl", 
        "COMMENT ON %s IS ", 
        "COLUMN %s.", 
        "SELECT description, classoid, objoid, objsubid FROM pg_catalog.pg_description ORDER BY classoid, objoid, objsubid", 
        "SELECT description, classoid, objoid, objsubid FROM pg_description ORDER BY classoid, objoid, objsubid", 
        "SELECT description, 0 AS classoid, objoid, 0 AS objsubid FROM pg_description ORDER BY objoid", 
        "classoid", 
        "objoid", 
        "objsubid", 
        "DROP SCHEMA %s;", 
        "CREATE SCHEMA %s;", 
        "SCHEMA %s", 
        "DROP EXTENSION %s;", 
        "CREATE EXTENSION IF NOT EXISTS %s WITH SCHEMA %s;", 
        "-- For binary upgrade, create an empty extension and insert objects into it", 
        "DROP EXTENSION IF EXISTS %s;", 
        "SELECT binary_upgrade.create_empty_extension(", 
        "ARRAY[", 
        "]::pg_catalog.text[]", 
        "EXTENSION %s", 
        "EXTENSION", 
        "WARNING: typtype of data type \"%s\" appears to be invalid", 
        "SELECT oid, enumlabel FROM pg_catalog.pg_enum WHERE enumtypid = '%u'ORDER BY enumsortorder", 
        "SELECT oid, enumlabel FROM pg_catalog.pg_enum WHERE enumtypid = '%u'ORDER BY oid", 
        "DROP TYPE %s.", 
        "CREATE TYPE %s AS ENUM (", 
        "enumlabel", 
        "-- For binary upgrade, must preserve pg_enum oids", 
        "SELECT binary_upgrade.set_next_pg_enum_oid('%u'::pg_catalog.oid);", 
        "ALTER TYPE %s.", 
        "%s ADD VALUE ", 
        "TYPE %s", 
        "SELECT pg_catalog.format_type(rngsubtype, NULL) AS rngsubtype, opc.opcname AS opcname, (SELECT nspname FROM pg_catalog.pg_namespace nsp   WHERE nsp.oid = opc.opcnamespace) AS opcnsp, opc.opcdefault, CASE WHEN rngcollation = st.typcollation THEN 0      ELSE rngcollation END AS collation, rngcanonical, rngsubdiff FROM pg_catalog.pg_range r, pg_catalog.pg_type st,      pg_catalog.pg_opclass opc WHERE st.oid = rngsubtype AND opc.oid = rngsubopc AND rngtypid = '%u'", 
        "CREATE TYPE %s AS RANGE (", 
        "rngsubtype", 
        "    subtype = %s", 
        "opcdefault", 
        "opcnsp", 
        "    subtype_opclass = %s.", 
        "    collation = %s.", 
        "rngcanonical", 
        "    canonical = %s", 
        "rngsubdiff", 
        "    subtype_diff = %s", 
        "CREATE TYPE %s;", 
        "SELECT typlen, typinput, typoutput, typreceive, typsend, typmodin, typmodout, typanalyze, typreceive::pg_catalog.oid AS typreceiveoid, typsend::pg_catalog.oid AS typsendoid, typmodin::pg_catalog.oid AS typmodinoid, typmodout::pg_catalog.oid AS typmodoutoid, typanalyze::pg_catalog.oid AS typanalyzeoid, typcategory, typispreferred, typdelim, typbyval, typalign, typstorage, (typcollation <> 0) AS typcollatable, pg_catalog.pg_get_expr(typdefaultbin, 0) AS typdefaultbin, typdefault FROM pg_catalog.pg_type WHERE oid = '%u'::pg_catalog.oid", 
        "SELECT typlen, typinput, typoutput, typreceive, typsend, typmodin, typmodout, typanalyze, typreceive::pg_catalog.oid AS typreceiveoid, typsend::pg_catalog.oid AS typsendoid, typmodin::pg_catalog.oid AS typmodinoid, typmodout::pg_catalog.oid AS typmodoutoid, typanalyze::pg_catalog.oid AS typanalyzeoid, typcategory, typispreferred, typdelim, typbyval, typalign, typstorage, false AS typcollatable, pg_catalog.pg_get_expr(typdefaultbin, 0) AS typdefaultbin, typdefault FROM pg_catalog.pg_type WHERE oid = '%u'::pg_catalog.oid", 
        "SELECT typlen, typinput, typoutput, typreceive, typsend, typmodin, typmodout, typanalyze, typreceive::pg_catalog.oid AS typreceiveoid, typsend::pg_catalog.oid AS typsendoid, typmodin::pg_catalog.oid AS typmodinoid, typmodout::pg_catalog.oid AS typmodoutoid, typanalyze::pg_catalog.oid AS typanalyzeoid, 'U' AS typcategory, false AS typispreferred, typdelim, typbyval, typalign, typstorage, false AS typcollatable, pg_catalog.pg_get_expr(typdefaultbin, 'pg_catalog.pg_type'::pg_catalog.regclass) AS typdefaultbin, typdefault FROM pg_catalog.pg_type WHERE oid = '%u'::pg_catalog.oid", 
        "SELECT typlen, typinput, typoutput, typreceive, typsend, '-' AS typmodin, '-' AS typmodout, typanalyze, typreceive::pg_catalog.oid AS typreceiveoid, typsend::pg_catalog.oid AS typsendoid, 0 AS typmodinoid, 0 AS typmodoutoid, typanalyze::pg_catalog.oid AS typanalyzeoid, 'U' AS typcategory, false AS typispreferred, typdelim, typbyval, typalign, typstorage, false AS typcollatable, pg_catalog.pg_get_expr(typdefaultbin, 'pg_catalog.pg_type'::pg_catalog.regclass) AS typdefaultbin, typdefault FROM pg_catalog.pg_type WHERE oid = '%u'::pg_catalog.oid", 
        "SELECT typlen, typinput, typoutput, typreceive, typsend, '-' AS typmodin, '-' AS typmodout, '-' AS typanalyze, typreceive::pg_catalog.oid AS typreceiveoid, typsend::pg_catalog.oid AS typsendoid, 0 AS typmodinoid, 0 AS typmodoutoid, 0 AS typanalyzeoid, 'U' AS typcategory, false AS typispreferred, typdelim, typbyval, typalign, typstorage, false AS typcollatable, pg_catalog.pg_get_expr(typdefaultbin, 'pg_catalog.pg_type'::pg_catalog.regclass) AS typdefaultbin, typdefault FROM pg_catalog.pg_type WHERE oid = '%u'::pg_catalog.oid", 
        "SELECT typlen, typinput, typoutput, '-' AS typreceive, '-' AS typsend, '-' AS typmodin, '-' AS typmodout, '-' AS typanalyze, 0 AS typreceiveoid, 0 AS typsendoid, 0 AS typmodinoid, 0 AS typmodoutoid, 0 AS typanalyzeoid, 'U' AS typcategory, false AS typispreferred, typdelim, typbyval, typalign, typstorage, false AS typcollatable, pg_catalog.pg_get_expr(typdefaultbin, 'pg_catalog.pg_type'::pg_catalog.regclass) AS typdefaultbin, typdefault FROM pg_catalog.pg_type WHERE oid = '%u'::pg_catalog.oid", 
        "SELECT typlen, typinput, typoutput, '-' AS typreceive, '-' AS typsend, '-' AS typmodin, '-' AS typmodout, '-' AS typanalyze, 0 AS typreceiveoid, 0 AS typsendoid, 0 AS typmodinoid, 0 AS typmodoutoid, 0 AS typanalyzeoid, 'U' AS typcategory, false AS typispreferred, typdelim, typbyval, typalign, typstorage, false AS typcollatable, NULL AS typdefaultbin, typdefault FROM pg_type WHERE oid = '%u'::oid", 
        "SELECT typlen, typinput, typoutput, '-' AS typreceive, '-' AS typsend, '-' AS typmodin, '-' AS typmodout, '-' AS typanalyze, 0 AS typreceiveoid, 0 AS typsendoid, 0 AS typmodinoid, 0 AS typmodoutoid, 0 AS typanalyzeoid, 'U' AS typcategory, false AS typispreferred, typdelim, typbyval, typalign, typstorage, false AS typcollatable, NULL AS typdefaultbin, NULL AS typdefault FROM pg_type WHERE oid = '%u'::oid", 
        "SELECT typlen, typinput, typoutput, '-' AS typreceive, '-' AS typsend, '-' AS typmodin, '-' AS typmodout, '-' AS typanalyze, 0 AS typreceiveoid, 0 AS typsendoid, 0 AS typmodinoid, 0 AS typmodoutoid, 0 AS typanalyzeoid, 'U' AS typcategory, false AS typispreferred, typdelim, typbyval, typalign, 'p'::char AS typstorage, false AS typcollatable, NULL AS typdefaultbin, NULL AS typdefault FROM pg_type WHERE oid = '%u'::oid", 
        "typlen", 
        "typreceive", 
        "typsend", 
        "typmodin", 
        "typmodout", 
        "typanalyze", 
        "typreceiveoid", 
        "typsendoid", 
        "typmodinoid", 
        "typmodoutoid", 
        "typanalyzeoid", 
        "typcategory", 
        "typispreferred", 
        "typdelim", 
        "typbyval", 
        "typalign", 
        "typcollatable", 
        "typdefaultbin", 
        "typdefault", 
        "%s CASCADE;", 
        "variable", 
        "CREATE TYPE %s (", 
        "    INTERNALLENGTH = %s", 
        "    INPUT = %s", 
        "    OUTPUT = %s", 
        "    RECEIVE = %s", 
        "    SEND = %s", 
        "    TYPMOD_IN = %s", 
        "    TYPMOD_OUT = %s", 
        "    ANALYZE = %s", 
        "    COLLATABLE = true", 
        "    DEFAULT = ", 
        "    ELEMENT = %s", 
        "    CATEGORY = ", 
        "    PREFERRED = true", 
        "    DELIMITER = ", 
        "    ALIGNMENT = char", 
        "    ALIGNMENT = int2", 
        "    ALIGNMENT = int4", 
        "    ALIGNMENT = double", 
        "    STORAGE = plain", 
        "    STORAGE = external", 
        "    STORAGE = extended", 
        "    STORAGE = main", 
        "    PASSEDBYVALUE", 
        "SELECT t.typnotnull, pg_catalog.format_type(t.typbasetype, t.typtypmod) AS typdefn, pg_catalog.pg_get_expr(t.typdefaultbin, 'pg_catalog.pg_type'::pg_catalog.regclass) AS typdefaultbin, t.typdefault, CASE WHEN t.typcollation <> u.typcollation THEN t.typcollation ELSE 0 END AS typcollation FROM pg_catalog.pg_type t LEFT JOIN pg_catalog.pg_type u ON (t.typbasetype = u.oid) WHERE t.oid = '%u'::pg_catalog.oid", 
        "SELECT typnotnull, pg_catalog.format_type(typbasetype, typtypmod) AS typdefn, pg_catalog.pg_get_expr(typdefaultbin, 'pg_catalog.pg_type'::pg_catalog.regclass) AS typdefaultbin, typdefault, 0 AS typcollation FROM pg_catalog.pg_type WHERE oid = '%u'::pg_catalog.oid", 
        "typnotnull", 
        "typdefn", 
        "typcollation", 
        "CREATE DOMAIN %s AS %s", 
        " COLLATE %s.", 
        " NOT NULL", 
        " DEFAULT ", 
        "CONSTRAINT %s %s", 
        "DROP DOMAIN %s.", 
        "DOMAIN %s", 
        "SELECT a.attname, pg_catalog.format_type(a.atttypid, a.atttypmod) AS atttypdefn, a.attlen, a.attalign, a.attisdropped, CASE WHEN a.attcollation <> at.typcollation THEN a.attcollation ELSE 0 END AS attcollation FROM pg_catalog.pg_type ct JOIN pg_catalog.pg_attribute a ON a.attrelid = ct.typrelid LEFT JOIN pg_catalog.pg_type at ON at.oid = a.atttypid WHERE ct.oid = '%u'::pg_catalog.oid ORDER BY a.attnum ", 
        "SELECT a.attname, pg_catalog.format_type(a.atttypid, a.atttypmod) AS atttypdefn, a.attlen, a.attalign, a.attisdropped, 0 AS attcollation FROM pg_catalog.pg_type ct, pg_catalog.pg_attribute a WHERE ct.oid = '%u'::pg_catalog.oid AND a.attrelid = ct.typrelid ORDER BY a.attnum ", 
        "atttypdefn", 
        "CREATE TYPE %s AS (", 
        "%s INTEGER /* dummy */", 
        "-- For binary upgrade, recreate dropped column.", 
        "UPDATE pg_catalog.pg_attribute", 
        "SET attlen = %s, attalign = '%s', attbyval = false", 
        "WHERE attname = ", 
        "  AND attrelid = ", 
        "::pg_catalog.regclass;", 
        "ALTER TYPE %s ", 
        "DROP ATTRIBUTE %s;", 
        "SELECT c.tableoid, a.attname, a.attnum FROM pg_catalog.pg_class c, pg_catalog.pg_attribute a WHERE c.oid = '%u' AND c.oid = a.attrelid   AND NOT a.attisdropped ORDER BY a.attnum ", 
        "SHELL TYPE", 
        "DROP PROCEDURAL LANGUAGE %s;", 
        "TRUSTED ", 
        "CREATE %sPROCEDURAL LANGUAGE %s", 
        " HANDLER %s", 
        " INLINE ", 
        " VALIDATOR ", 
        "CREATE OR REPLACE PROCEDURAL LANGUAGE %s", 
        "LANGUAGE %s", 
        "INOUT ", 
        "WARNING: bogus value in proargmodes array", 
        "%s%s%s%s%s", 
        "SELECT proretset, prosrc, probin, pg_catalog.pg_get_function_arguments(oid) AS funcargs, pg_catalog.pg_get_function_identity_arguments(oid) AS funciargs, pg_catalog.pg_get_function_result(oid) AS funcresult, proiswindow, provolatile, proisstrict, prosecdef, proleakproof, proconfig, procost, prorows, (SELECT lanname FROM pg_catalog.pg_language WHERE oid = prolang) AS lanname FROM pg_catalog.pg_proc WHERE oid = '%u'::pg_catalog.oid", 
        "SELECT proretset, prosrc, probin, pg_catalog.pg_get_function_arguments(oid) AS funcargs, pg_catalog.pg_get_function_identity_arguments(oid) AS funciargs, pg_catalog.pg_get_function_result(oid) AS funcresult, proiswindow, provolatile, proisstrict, prosecdef, false AS proleakproof,  proconfig, procost, prorows, (SELECT lanname FROM pg_catalog.pg_language WHERE oid = prolang) AS lanname FROM pg_catalog.pg_proc WHERE oid = '%u'::pg_catalog.oid", 
        "SELECT proretset, prosrc, probin, proallargtypes, proargmodes, proargnames, false AS proiswindow, provolatile, proisstrict, prosecdef, false AS proleakproof, proconfig, procost, prorows, (SELECT lanname FROM pg_catalog.pg_language WHERE oid = prolang) AS lanname FROM pg_catalog.pg_proc WHERE oid = '%u'::pg_catalog.oid", 
        "SELECT proretset, prosrc, probin, proallargtypes, proargmodes, proargnames, false AS proiswindow, provolatile, proisstrict, prosecdef, false AS proleakproof, null AS proconfig, 0 AS procost, 0 AS prorows, (SELECT lanname FROM pg_catalog.pg_language WHERE oid = prolang) AS lanname FROM pg_catalog.pg_proc WHERE oid = '%u'::pg_catalog.oid", 
        "SELECT proretset, prosrc, probin, null AS proallargtypes, null AS proargmodes, proargnames, false AS proiswindow, provolatile, proisstrict, prosecdef, false AS proleakproof, null AS proconfig, 0 AS procost, 0 AS prorows, (SELECT lanname FROM pg_catalog.pg_language WHERE oid = prolang) AS lanname FROM pg_catalog.pg_proc WHERE oid = '%u'::pg_catalog.oid", 
        "SELECT proretset, prosrc, probin, null AS proallargtypes, null AS proargmodes, null AS proargnames, false AS proiswindow, provolatile, proisstrict, prosecdef, false AS proleakproof, null AS proconfig, 0 AS procost, 0 AS prorows, (SELECT lanname FROM pg_catalog.pg_language WHERE oid = prolang) AS lanname FROM pg_catalog.pg_proc WHERE oid = '%u'::pg_catalog.oid", 
        "SELECT proretset, prosrc, probin, null AS proallargtypes, null AS proargmodes, null AS proargnames, false AS proiswindow, case when proiscachable then 'i' else 'v' end AS provolatile, proisstrict, false AS prosecdef, false AS proleakproof, null AS proconfig, 0 AS procost, 0 AS prorows, (SELECT lanname FROM pg_language WHERE oid = prolang) AS lanname FROM pg_proc WHERE oid = '%u'::oid", 
        "SELECT proretset, prosrc, probin, null AS proallargtypes, null AS proargmodes, null AS proargnames, false AS proiswindow, CASE WHEN proiscachable THEN 'i' ELSE 'v' END AS provolatile, false AS proisstrict, false AS prosecdef, false AS proleakproof, NULL AS proconfig, 0 AS procost, 0 AS prorows, (SELECT lanname FROM pg_language WHERE oid = prolang) AS lanname FROM pg_proc WHERE oid = '%u'::oid", 
        "proretset", 
        "prosrc", 
        "probin", 
        "funcargs", 
        "funciargs", 
        "funcresult", 
        "proallargtypes", 
        "proargmodes", 
        "proargnames", 
        "proiswindow", 
        "provolatile", 
        "proisstrict", 
        "prosecdef", 
        "proleakproof", 
        "proconfig", 
        "procost", 
        "prorows", 
        "WARNING: could not parse proallargtypes array", 
        "WARNING: could not parse proargmodes array", 
        "WARNING: could not parse proargnames array", 
        "WARNING: could not parse proconfig array", 
        "DROP FUNCTION %s.%s;", 
        "CREATE FUNCTION %s ", 
        "RETURNS %s", 
        "SETOF ", 
        "RETURNS %s%s", 
        "    LANGUAGE %s", 
        " WINDOW", 
        " IMMUTABLE", 
        " STABLE", 
        "unrecognized provolatile value for function \"%s\"", 
        " STRICT", 
        " SECURITY DEFINER", 
        " LEAKPROOF", 
        "internal", 
        " COST %s", 
        " ROWS %s", 
        "    SET %s TO ", 
        "DateStyle", 
        "search_path", 
        "    %s;", 
        "FUNCTION %s", 
        "could not find function definition for function with OID %u", 
        "DROP CAST (%s AS %s);", 
        "CREATE CAST (%s AS %s) ", 
        "WITHOUT FUNCTION", 
        "WITH INOUT", 
        "WITH FUNCTION %s.%s", 
        "WARNING: bogus value in pg_cast.castfunc or pg_cast.castmethod field", 
        "WARNING: bogus value in pg_cast.castmethod field", 
        " AS ASSIGNMENT", 
        " AS IMPLICIT", 
        "CAST (%s AS %s)", 
        "SELECT oprkind, oprcode::pg_catalog.regprocedure, oprleft::pg_catalog.regtype, oprright::pg_catalog.regtype, oprcom::pg_catalog.regoperator, oprnegate::pg_catalog.regoperator, oprrest::pg_catalog.regprocedure, oprjoin::pg_catalog.regprocedure, oprcanmerge, oprcanhash FROM pg_catalog.pg_operator WHERE oid = '%u'::pg_catalog.oid", 
        "SELECT oprkind, oprcode::pg_catalog.regprocedure, oprleft::pg_catalog.regtype, oprright::pg_catalog.regtype, oprcom::pg_catalog.regoperator, oprnegate::pg_catalog.regoperator, oprrest::pg_catalog.regprocedure, oprjoin::pg_catalog.regprocedure, (oprlsortop != 0) AS oprcanmerge, oprcanhash FROM pg_catalog.pg_operator WHERE oid = '%u'::pg_catalog.oid", 
        "SELECT oprkind, oprcode, CASE WHEN oprleft = 0 THEN '-' ELSE format_type(oprleft, NULL) END AS oprleft, CASE WHEN oprright = 0 THEN '-' ELSE format_type(oprright, NULL) END AS oprright, oprcom, oprnegate, oprrest, oprjoin, (oprlsortop != 0) AS oprcanmerge, oprcanhash FROM pg_operator WHERE oid = '%u'::oid", 
        "SELECT oprkind, oprcode, CASE WHEN oprleft = 0 THEN '-'::name ELSE (SELECT typname FROM pg_type WHERE oid = oprleft) END AS oprleft, CASE WHEN oprright = 0 THEN '-'::name ELSE (SELECT typname FROM pg_type WHERE oid = oprright) END AS oprright, oprcom, oprnegate, oprrest, oprjoin, (oprlsortop != 0) AS oprcanmerge, oprcanhash FROM pg_operator WHERE oid = '%u'::oid", 
        "oprleft", 
        "oprright", 
        "oprcom", 
        "oprnegate", 
        "oprrest", 
        "oprjoin", 
        "oprcanmerge", 
        "oprcanhash", 
        "    PROCEDURE = %s", 
        "    LEFTARG = %s", 
        "    RIGHTARG = %s", 
        ", NONE)", 
        "    COMMUTATOR = %s", 
        "    NEGATOR = %s", 
        "    MERGES", 
        "    HASHES", 
        "    RESTRICT = %s", 
        "    JOIN = %s", 
        "DROP OPERATOR %s.%s;", 
        "CREATE OPERATOR %s (", 
        "OPERATOR %s", 
        "OPERATOR(%s)", 
        "WARNING: could not find operator with OID %s", 
        "SELECT '%u'::pg_catalog.regproc", 
        "SELECT opcintype::pg_catalog.regtype, opckeytype::pg_catalog.regtype, opcdefault, opcfamily, opfname AS opcfamilyname, nspname AS opcfamilynsp, (SELECT amname FROM pg_catalog.pg_am WHERE oid = opcmethod) AS amname FROM pg_catalog.pg_opclass c LEFT JOIN pg_catalog.pg_opfamily f ON f.oid = opcfamily LEFT JOIN pg_catalog.pg_namespace n ON n.oid = opfnamespace WHERE c.oid = '%u'::pg_catalog.oid", 
        "SELECT opcintype::pg_catalog.regtype, opckeytype::pg_catalog.regtype, opcdefault, NULL AS opcfamily, NULL AS opcfamilyname, NULL AS opcfamilynsp, (SELECT amname FROM pg_catalog.pg_am WHERE oid = opcamid) AS amname FROM pg_catalog.pg_opclass WHERE oid = '%u'::pg_catalog.oid", 
        "opcintype", 
        "opckeytype", 
        "opcfamily", 
        "opcfamilyname", 
        "opcfamilynsp", 
        "amname", 
        "DROP OPERATOR CLASS %s", 
        " USING %s;", 
        "CREATE OPERATOR CLASS %s", 
        "DEFAULT ", 
        "FOR TYPE %s USING %s", 
        " FAMILY ", 
        "STORAGE %s", 
        "SELECT amopstrategy, false AS amopreqcheck, amopopr::pg_catalog.regoperator, opfname AS sortfamily, nspname AS sortfamilynsp FROM pg_catalog.pg_amop ao JOIN pg_catalog.pg_depend ON (classid = 'pg_catalog.pg_amop'::pg_catalog.regclass AND objid = ao.oid) LEFT JOIN pg_catalog.pg_opfamily f ON f.oid = amopsortfamily LEFT JOIN pg_catalog.pg_namespace n ON n.oid = opfnamespace WHERE refclassid = 'pg_catalog.pg_opclass'::pg_catalog.regclass AND refobjid = '%u'::pg_catalog.oid AND amopfamily = '%s'::pg_catalog.oid ORDER BY amopstrategy", 
        "SELECT amopstrategy, false AS amopreqcheck, amopopr::pg_catalog.regoperator, NULL AS sortfamily, NULL AS sortfamilynsp FROM pg_catalog.pg_amop ao, pg_catalog.pg_depend WHERE refclassid = 'pg_catalog.pg_opclass'::pg_catalog.regclass AND refobjid = '%u'::pg_catalog.oid AND classid = 'pg_catalog.pg_amop'::pg_catalog.regclass AND objid = ao.oid ORDER BY amopstrategy", 
        "SELECT amopstrategy, amopreqcheck, amopopr::pg_catalog.regoperator, NULL AS sortfamily, NULL AS sortfamilynsp FROM pg_catalog.pg_amop ao, pg_catalog.pg_depend WHERE refclassid = 'pg_catalog.pg_opclass'::pg_catalog.regclass AND refobjid = '%u'::pg_catalog.oid AND classid = 'pg_catalog.pg_amop'::pg_catalog.regclass AND objid = ao.oid ORDER BY amopstrategy", 
        "SELECT amopstrategy, amopreqcheck, amopopr::pg_catalog.regoperator, NULL AS sortfamily, NULL AS sortfamilynsp FROM pg_catalog.pg_amop WHERE amopclaid = '%u'::pg_catalog.oid ORDER BY amopstrategy", 
        "amopstrategy", 
        "amopreqcheck", 
        "amopopr", 
        "sortfamily", 
        "sortfamilynsp", 
        "OPERATOR %s %s", 
        " FOR ORDER BY ", 
        " RECHECK", 
        "SELECT amprocnum, amproc::pg_catalog.regprocedure, amproclefttype::pg_catalog.regtype, amprocrighttype::pg_catalog.regtype FROM pg_catalog.pg_amproc ap, pg_catalog.pg_depend WHERE refclassid = 'pg_catalog.pg_opclass'::pg_catalog.regclass AND refobjid = '%u'::pg_catalog.oid AND classid = 'pg_catalog.pg_amproc'::pg_catalog.regclass AND objid = ap.oid ORDER BY amprocnum", 
        "SELECT amprocnum, amproc::pg_catalog.regprocedure, '' AS amproclefttype, '' AS amprocrighttype FROM pg_catalog.pg_amproc WHERE amopclaid = '%u'::pg_catalog.oid ORDER BY amprocnum", 
        "amprocnum", 
        "amproc", 
        "amproclefttype", 
        "amprocrighttype", 
        " (%s, %s)", 
        "OPERATOR CLASS %s", 
        " USING %s", 
        "SELECT amopstrategy, false AS amopreqcheck, amopopr::pg_catalog.regoperator, opfname AS sortfamily, nspname AS sortfamilynsp FROM pg_catalog.pg_amop ao JOIN pg_catalog.pg_depend ON (classid = 'pg_catalog.pg_amop'::pg_catalog.regclass AND objid = ao.oid) LEFT JOIN pg_catalog.pg_opfamily f ON f.oid = amopsortfamily LEFT JOIN pg_catalog.pg_namespace n ON n.oid = opfnamespace WHERE refclassid = 'pg_catalog.pg_opfamily'::pg_catalog.regclass AND refobjid = '%u'::pg_catalog.oid AND amopfamily = '%u'::pg_catalog.oid ORDER BY amopstrategy", 
        "SELECT amopstrategy, false AS amopreqcheck, amopopr::pg_catalog.regoperator, NULL AS sortfamily, NULL AS sortfamilynsp FROM pg_catalog.pg_amop ao, pg_catalog.pg_depend WHERE refclassid = 'pg_catalog.pg_opfamily'::pg_catalog.regclass AND refobjid = '%u'::pg_catalog.oid AND classid = 'pg_catalog.pg_amop'::pg_catalog.regclass AND objid = ao.oid ORDER BY amopstrategy", 
        "SELECT amopstrategy, amopreqcheck, amopopr::pg_catalog.regoperator, NULL AS sortfamily, NULL AS sortfamilynsp FROM pg_catalog.pg_amop ao, pg_catalog.pg_depend WHERE refclassid = 'pg_catalog.pg_opfamily'::pg_catalog.regclass AND refobjid = '%u'::pg_catalog.oid AND classid = 'pg_catalog.pg_amop'::pg_catalog.regclass AND objid = ao.oid ORDER BY amopstrategy", 
        "SELECT amprocnum, amproc::pg_catalog.regprocedure, amproclefttype::pg_catalog.regtype, amprocrighttype::pg_catalog.regtype FROM pg_catalog.pg_amproc ap, pg_catalog.pg_depend WHERE refclassid = 'pg_catalog.pg_opfamily'::pg_catalog.regclass AND refobjid = '%u'::pg_catalog.oid AND classid = 'pg_catalog.pg_amproc'::pg_catalog.regclass AND objid = ap.oid ORDER BY amprocnum", 
        "SELECT (SELECT amname FROM pg_catalog.pg_am WHERE oid = opfmethod) AS amname FROM pg_catalog.pg_opfamily WHERE oid = '%u'::pg_catalog.oid", 
        "DROP OPERATOR FAMILY %s", 
        "CREATE OPERATOR FAMILY %s", 
        "ALTER OPERATOR FAMILY %s", 
        " USING %s ADD", 
        "FUNCTION %s (%s, %s) %s", 
        "OPERATOR FAMILY %s", 
        "SELECT collcollate, collctype FROM pg_catalog.pg_collation c WHERE c.oid = '%u'::pg_catalog.oid", 
        "collcollate", 
        "collctype", 
        "DROP COLLATION %s", 
        "CREATE COLLATION %s (lc_collate = ", 
        ", lc_ctype = ", 
        "COLLATION %s", 
        "SELECT pg_catalog.pg_encoding_to_char(conforencoding) AS conforencoding, pg_catalog.pg_encoding_to_char(contoencoding) AS contoencoding, conproc, condefault FROM pg_catalog.pg_conversion c WHERE c.oid = '%u'::pg_catalog.oid", 
        "conforencoding", 
        "contoencoding", 
        "conproc", 
        "condefault", 
        "DROP CONVERSION %s", 
        "CREATE %sCONVERSION %s FOR ", 
        " FROM %s;", 
        "CONVERSION %s", 
        "SELECT aggtransfn, aggfinalfn, aggtranstype::pg_catalog.regtype, aggmtransfn, aggminvtransfn, aggmfinalfn, aggmtranstype::pg_catalog.regtype, aggfinalextra, aggmfinalextra, aggsortop::pg_catalog.regoperator, (aggkind = 'h') AS hypothetical, aggtransspace, agginitval, aggmtransspace, aggminitval, true AS convertok, pg_catalog.pg_get_function_arguments(p.oid) AS funcargs, pg_catalog.pg_get_function_identity_arguments(p.oid) AS funciargs FROM pg_catalog.pg_aggregate a, pg_catalog.pg_proc p WHERE a.aggfnoid = p.oid AND p.oid = '%u'::pg_catalog.oid", 
        "SELECT aggtransfn, aggfinalfn, aggtranstype::pg_catalog.regtype, '-' AS aggmtransfn, '-' AS aggminvtransfn, '-' AS aggmfinalfn, 0 AS aggmtranstype, false AS aggfinalextra, false AS aggmfinalextra, aggsortop::pg_catalog.regoperator, false AS hypothetical, 0 AS aggtransspace, agginitval, 0 AS aggmtransspace, NULL AS aggminitval, true AS convertok, pg_catalog.pg_get_function_arguments(p.oid) AS funcargs, pg_catalog.pg_get_function_identity_arguments(p.oid) AS funciargs FROM pg_catalog.pg_aggregate a, pg_catalog.pg_proc p WHERE a.aggfnoid = p.oid AND p.oid = '%u'::pg_catalog.oid", 
        "SELECT aggtransfn, aggfinalfn, aggtranstype::pg_catalog.regtype, '-' AS aggmtransfn, '-' AS aggminvtransfn, '-' AS aggmfinalfn, 0 AS aggmtranstype, false AS aggfinalextra, false AS aggmfinalextra, aggsortop::pg_catalog.regoperator, false AS hypothetical, 0 AS aggtransspace, agginitval, 0 AS aggmtransspace, NULL AS aggminitval, true AS convertok FROM pg_catalog.pg_aggregate a, pg_catalog.pg_proc p WHERE a.aggfnoid = p.oid AND p.oid = '%u'::pg_catalog.oid", 
        "SELECT aggtransfn, aggfinalfn, aggtranstype::pg_catalog.regtype, '-' AS aggmtransfn, '-' AS aggminvtransfn, '-' AS aggmfinalfn, 0 AS aggmtranstype, false AS aggfinalextra, false AS aggmfinalextra, 0 AS aggsortop, false AS hypothetical, 0 AS aggtransspace, agginitval, 0 AS aggmtransspace, NULL AS aggminitval, true AS convertok FROM pg_catalog.pg_aggregate a, pg_catalog.pg_proc p WHERE a.aggfnoid = p.oid AND p.oid = '%u'::pg_catalog.oid", 
        "SELECT aggtransfn, aggfinalfn, format_type(aggtranstype, NULL) AS aggtranstype, '-' AS aggmtransfn, '-' AS aggminvtransfn, '-' AS aggmfinalfn, 0 AS aggmtranstype, false AS aggfinalextra, false AS aggmfinalextra, 0 AS aggsortop, false AS hypothetical, 0 AS aggtransspace, agginitval, 0 AS aggmtransspace, NULL AS aggminitval, true AS convertok FROM pg_aggregate WHERE oid = '%u'::oid", 
        "SELECT aggtransfn1 AS aggtransfn, aggfinalfn, (SELECT typname FROM pg_type WHERE oid = aggtranstype1) AS aggtranstype, '-' AS aggmtransfn, '-' AS aggminvtransfn, '-' AS aggmfinalfn, 0 AS aggmtranstype, false AS aggfinalextra, false AS aggmfinalextra, 0 AS aggsortop, false AS hypothetical, 0 AS aggtransspace, agginitval1 AS agginitval, 0 AS aggmtransspace, NULL AS aggminitval, (aggtransfn2 = 0 and aggtranstype2 = 0 and agginitval2 is null) AS convertok FROM pg_aggregate WHERE oid = '%u'::oid", 
        "aggtransfn", 
        "aggfinalfn", 
        "aggmtransfn", 
        "aggminvtransfn", 
        "aggmfinalfn", 
        "aggfinalextra", 
        "aggmfinalextra", 
        "aggsortop", 
        "hypothetical", 
        "aggtranstype", 
        "aggtransspace", 
        "aggmtranstype", 
        "aggmtransspace", 
        "agginitval", 
        "aggminitval", 
        "convertok", 
        "WARNING: aggregate function %s could not be dumped correctly for this database version; ignored", 
        "    SFUNC = %s,", 
        "    STYPE = %s", 
        "    SFUNC = %s,", 
        "    STYPE = %s", 
        "    SSPACE = %s", 
        "    INITCOND = ", 
        "    FINALFUNC = %s", 
        "    FINALFUNC_EXTRA", 
        "    MSFUNC = %s,", 
        "    MINVFUNC = %s,", 
        "    MSTYPE = %s", 
        "    MSSPACE = %s", 
        "    MINITCOND = ", 
        "    MFINALFUNC = %s", 
        "    MFINALFUNC_EXTRA", 
        "    SORTOP = %s", 
        "    HYPOTHETICAL", 
        "DROP AGGREGATE %s.%s;", 
        "CREATE AGGREGATE %s (", 
        "AGGREGATE %s", 
        "CREATE TEXT SEARCH PARSER %s (", 
        "    START = %s,", 
        "    GETTOKEN = %s,", 
        "    END = %s,", 
        "    HEADLINE = %s,", 
        "    LEXTYPES = %s );", 
        "DROP TEXT SEARCH PARSER %s", 
        "TEXT SEARCH PARSER %s", 
        "TEXT SEARCH PARSER", 
        "SELECT nspname, tmplname FROM pg_ts_template p, pg_namespace n WHERE p.oid = '%u' AND n.oid = tmplnamespace", 
        "CREATE TEXT SEARCH DICTIONARY %s (", 
        "    TEMPLATE = ", 
        "    %s", 
        "DROP TEXT SEARCH DICTIONARY %s", 
        "TEXT SEARCH DICTIONARY %s", 
        "CREATE TEXT SEARCH TEMPLATE %s (", 
        "    INIT = %s,", 
        "    LEXIZE = %s );", 
        "DROP TEXT SEARCH TEMPLATE %s", 
        "TEXT SEARCH TEMPLATE %s", 
        "TEXT SEARCH TEMPLATE", 
        "SELECT nspname, prsname FROM pg_ts_parser p, pg_namespace n WHERE p.oid = '%u' AND n.oid = prsnamespace", 
        "CREATE TEXT SEARCH CONFIGURATION %s (", 
        "    PARSER = ", 
        "SELECT ", 
        "  ( SELECT alias FROM pg_catalog.ts_token_type('%u'::pg_catalog.oid) AS t ", 
        "    WHERE t.tokid = m.maptokentype ) AS tokenname, ", 
        "  m.mapdict::pg_catalog.regdictionary AS dictname ", 
        "FROM pg_catalog.pg_ts_config_map AS m ", 
        "WHERE m.mapcfg = '%u' ", 
        "ORDER BY m.mapcfg, m.maptokentype, m.mapseqno", 
        "tokenname", 
        "ALTER TEXT SEARCH CONFIGURATION %s", 
        "    ADD MAPPING FOR %s WITH %s", 
        "DROP TEXT SEARCH CONFIGURATION %s", 
        "TEXT SEARCH CONFIGURATION %s", 
        "CREATE FOREIGN DATA WRAPPER %s", 
        " VALIDATOR %s", 
        " OPTIONS (", 
        "    %s", 
        "DROP FOREIGN DATA WRAPPER %s;", 
        "FOREIGN DATA WRAPPER %s", 
        "SELECT fdwname FROM pg_foreign_data_wrapper w WHERE w.oid = '%u'", 
        "CREATE SERVER %s", 
        " TYPE ", 
        " VERSION ", 
        " FOREIGN DATA WRAPPER ", 
        "DROP SERVER %s;", 
        "SERVER %s", 
        "SELECT usename, array_to_string(ARRAY(SELECT quote_ident(option_name) || ' ' || quote_literal(option_value) FROM pg_options_to_table(umoptions) ORDER BY option_name), E',", 
        "    ') AS umoptions FROM pg_user_mappings WHERE srvid = '%u' ORDER BY usename", 
        "usename", 
        "umoptions", 
        "CREATE USER MAPPING FOR %s", 
        " SERVER %s", 
        "DROP USER MAPPING FOR %s", 
        " SERVER %s;", 
        "USER MAPPING %s SERVER %s", 
        "unrecognized object type in default privileges: %d", 
        "DEFAULT PRIVILEGES FOR %s", 
        "could not parse default ACL list (%s)", 
        "could not parse ACL list (%s) for object \"%s\" (%s)", 
        "SECURITY LABEL FOR %s ON %s IS ", 
        "COLUMN %s", 
        "SELECT label, provider, classoid, objoid, objsubid FROM pg_catalog.pg_seclabel ORDER BY classoid, objoid, objsubid", 
        "provider", 
        "SELECT attname, attacl FROM pg_catalog.pg_attribute WHERE attrelid = '%u' AND NOT attisdropped AND attacl IS NOT NULL ORDER BY attnum", 
        "SELECT pg_catalog.pg_get_viewdef('%u'::pg_catalog.oid) AS viewdef", 
        "SELECT definition AS viewdef FROM pg_views WHERE viewname = ", 
        "query to obtain definition of view \"%s\" returned no data", 
        "query to obtain definition of view \"%s\" returned more than one definition", 
        "definition of view \"%s\" appears to be empty (length zero)", 
        "DROP VIEW %s.", 
        "CREATE VIEW %s", 
        " WITH (", 
        "  WITH %s CHECK OPTION", 
        "VIEW %s", 
        "SELECT fs.srvname, pg_catalog.array_to_string(ARRAY(SELECT pg_catalog.quote_ident(option_name) || ' ' || pg_catalog.quote_literal(option_value) FROM pg_catalog.pg_options_to_table(ftoptions) ORDER BY option_name), E',", 
        "    ') AS ftoptions FROM pg_catalog.pg_foreign_table ft JOIN pg_catalog.pg_foreign_server fs ON (fs.oid = ft.ftserver) WHERE ft.ftrelid = '%u'", 
        "ftoptions", 
        "DROP %s %s.", 
        "UNLOGGED ", 
        "CREATE %s%s %s", 
        " OF %s", 
        " INTEGER /* dummy */", 
        " WITH OPTIONS", 
        " DEFAULT %s", 
        "CONSTRAINT %s ", 
        "INHERITS (", 
        "SERVER %s", 
        "WITH (", 
        "toast.", 
        "OPTIONS (", 
        "    %s", 
        "  WITH NO DATA;", 
        "UPDATE pg_catalog.pg_attribute", 
        "SET attlen = %d, attalign = '%c', attbyval = false", 
        "WHERE attname = ", 
        "ALTER TABLE ONLY %s ", 
        "ALTER FOREIGN TABLE %s ", 
        "DROP COLUMN %s;", 
        "-- For binary upgrade, recreate inherited column.", 
        "UPDATE pg_catalog.pg_attribute", 
        "SET attislocal = false", 
        "WHERE attname = ", 
        "-- For binary upgrade, set up inherited constraint.", 
        " ADD CONSTRAINT %s ", 
        "UPDATE pg_catalog.pg_constraint", 
        "SET conislocal = false", 
        "WHERE contype = 'c' AND conname = ", 
        "  AND conrelid = ", 
        "-- For binary upgrade, set up inheritance this way.", 
        "ALTER TABLE ONLY %s INHERIT ", 
        "-- For binary upgrade, set up typed tables this way.", 
        "ALTER TABLE ONLY %s OF %s;", 
        "-- For binary upgrade, set heap's relfrozenxid and relminmxid", 
        "UPDATE pg_catalog.pg_class", 
        "SET relfrozenxid = '%u', relminmxid = '%u'", 
        "WHERE oid = ", 
        "-- For binary upgrade, set toast's relfrozenxid and relminmxid", 
        "UPDATE pg_catalog.pg_class", 
        "SET relfrozenxid = '%u', relminmxid = '%u'", 
        "WHERE oid = '%u';", 
        "-- For binary upgrade, mark materialized view as populated", 
        "UPDATE pg_catalog.pg_class", 
        "SET relispopulated = 't'", 
        "WHERE oid = ", 
        "ALTER COLUMN %s SET NOT NULL;", 
        "ALTER COLUMN %s ", 
        "SET STATISTICS %d;", 
        "EXTERNAL", 
        "EXTENDED", 
        "SET STORAGE %s;", 
        "SET (%s);", 
        "OPTIONS (", 
        "    %s", 
        "ALTER TABLE ONLY %s REPLICA IDENTITY NOTHING;", 
        "ALTER TABLE ONLY %s REPLICA IDENTITY FULL;", 
        "ALTER COLUMN %s SET DEFAULT %s;", 
        "ALTER TABLE %s.", 
        "ALTER COLUMN %s DROP DEFAULT;", 
        "invalid column number %d for table \"%s\"", 
        "INDEX %s", 
        "ALTER TABLE %s CLUSTER", 
        " ON %s;", 
        "ALTER TABLE ONLY %s REPLICA IDENTITY USING", 
        " INDEX %s;", 
        "DROP INDEX %s.", 
        "missing index for constraint \"%s\"", 
        "ALTER TABLE ONLY %s", 
        "    ADD CONSTRAINT %s ", 
        "PRIMARY KEY", 
        "UNIQUE", 
        " DEFERRABLE", 
        " INITIALLY DEFERRED", 
        "ALTER TABLE ONLY %s.", 
        "DROP CONSTRAINT %s;", 
        "    ADD CONSTRAINT %s %s;", 
        "ALTER TABLE %s", 
        "ALTER DOMAIN %s", 
        "ALTER DOMAIN %s.", 
        "unrecognized constraint type: %c", 
        "SELECT datlastsysoid from pg_database where datname = ", 
        "datlastsysoid", 
        "SELECT oid FROM pg_class WHERE relname = 'pg_indexes'"
    ], 
    "metadata": {
        "output": {
            "pcap": {
                "basename": "dump.pcap", 
                "sha256": "653f01c67670d1a32fe24728a0dac7572f74dcd148abf44ed8650f968a464f7d", 
                "dirname": ""
            }
        }
    }
}